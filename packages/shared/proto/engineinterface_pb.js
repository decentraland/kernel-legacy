/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.exportSymbol('proto.engineinterface.PB_AttachEntityComponent', null, global);
goog.exportSymbol('proto.engineinterface.PB_Color', null, global);
goog.exportSymbol('proto.engineinterface.PB_ComponentCreated', null, global);
goog.exportSymbol('proto.engineinterface.PB_ComponentDisposed', null, global);
goog.exportSymbol('proto.engineinterface.PB_ComponentRemoved', null, global);
goog.exportSymbol('proto.engineinterface.PB_ComponentUpdated', null, global);
goog.exportSymbol('proto.engineinterface.PB_ContentMapping', null, global);
goog.exportSymbol('proto.engineinterface.PB_CreateEntity', null, global);
goog.exportSymbol('proto.engineinterface.PB_CreateUIScene', null, global);
goog.exportSymbol('proto.engineinterface.PB_DclMessage', null, global);
goog.exportSymbol('proto.engineinterface.PB_LoadParcelScenes', null, global);
goog.exportSymbol('proto.engineinterface.PB_Position', null, global);
goog.exportSymbol('proto.engineinterface.PB_Quaternion', null, global);
goog.exportSymbol('proto.engineinterface.PB_Query', null, global);
goog.exportSymbol('proto.engineinterface.PB_Ray', null, global);
goog.exportSymbol('proto.engineinterface.PB_RayQuery', null, global);
goog.exportSymbol('proto.engineinterface.PB_RemoveEntity', null, global);
goog.exportSymbol('proto.engineinterface.PB_SendSceneMessage', null, global);
goog.exportSymbol('proto.engineinterface.PB_SetEntityParent', null, global);
goog.exportSymbol('proto.engineinterface.PB_SetPosition', null, global);
goog.exportSymbol('proto.engineinterface.PB_TextShapeModel', null, global);
goog.exportSymbol('proto.engineinterface.PB_Transform', null, global);
goog.exportSymbol('proto.engineinterface.PB_UnloadScene', null, global);
goog.exportSymbol('proto.engineinterface.PB_UpdateEntityComponent', null, global);
goog.exportSymbol('proto.engineinterface.PB_Vector3', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.engineinterface.PB_CreateEntity = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.engineinterface.PB_CreateEntity, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.engineinterface.PB_CreateEntity.displayName = 'proto.engineinterface.PB_CreateEntity';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.engineinterface.PB_CreateEntity.prototype.toObject = function(opt_includeInstance) {
  return proto.engineinterface.PB_CreateEntity.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.engineinterface.PB_CreateEntity} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.PB_CreateEntity.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.engineinterface.PB_CreateEntity}
 */
proto.engineinterface.PB_CreateEntity.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.engineinterface.PB_CreateEntity;
  return proto.engineinterface.PB_CreateEntity.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.engineinterface.PB_CreateEntity} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.engineinterface.PB_CreateEntity}
 */
proto.engineinterface.PB_CreateEntity.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.engineinterface.PB_CreateEntity.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.engineinterface.PB_CreateEntity.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.engineinterface.PB_CreateEntity} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.PB_CreateEntity.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.engineinterface.PB_CreateEntity.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.engineinterface.PB_CreateEntity.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.engineinterface.PB_RemoveEntity = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.engineinterface.PB_RemoveEntity, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.engineinterface.PB_RemoveEntity.displayName = 'proto.engineinterface.PB_RemoveEntity';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.engineinterface.PB_RemoveEntity.prototype.toObject = function(opt_includeInstance) {
  return proto.engineinterface.PB_RemoveEntity.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.engineinterface.PB_RemoveEntity} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.PB_RemoveEntity.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.engineinterface.PB_RemoveEntity}
 */
proto.engineinterface.PB_RemoveEntity.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.engineinterface.PB_RemoveEntity;
  return proto.engineinterface.PB_RemoveEntity.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.engineinterface.PB_RemoveEntity} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.engineinterface.PB_RemoveEntity}
 */
proto.engineinterface.PB_RemoveEntity.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.engineinterface.PB_RemoveEntity.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.engineinterface.PB_RemoveEntity.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.engineinterface.PB_RemoveEntity} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.PB_RemoveEntity.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.engineinterface.PB_RemoveEntity.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.engineinterface.PB_RemoveEntity.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.engineinterface.PB_SetEntityParent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.engineinterface.PB_SetEntityParent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.engineinterface.PB_SetEntityParent.displayName = 'proto.engineinterface.PB_SetEntityParent';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.engineinterface.PB_SetEntityParent.prototype.toObject = function(opt_includeInstance) {
  return proto.engineinterface.PB_SetEntityParent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.engineinterface.PB_SetEntityParent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.PB_SetEntityParent.toObject = function(includeInstance, msg) {
  var f, obj = {
    entityid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    parentid: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.engineinterface.PB_SetEntityParent}
 */
proto.engineinterface.PB_SetEntityParent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.engineinterface.PB_SetEntityParent;
  return proto.engineinterface.PB_SetEntityParent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.engineinterface.PB_SetEntityParent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.engineinterface.PB_SetEntityParent}
 */
proto.engineinterface.PB_SetEntityParent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEntityid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setParentid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.engineinterface.PB_SetEntityParent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.engineinterface.PB_SetEntityParent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.engineinterface.PB_SetEntityParent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.PB_SetEntityParent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntityid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getParentid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string entityId = 1;
 * @return {string}
 */
proto.engineinterface.PB_SetEntityParent.prototype.getEntityid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.engineinterface.PB_SetEntityParent.prototype.setEntityid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string parentId = 2;
 * @return {string}
 */
proto.engineinterface.PB_SetEntityParent.prototype.getParentid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.engineinterface.PB_SetEntityParent.prototype.setParentid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.engineinterface.PB_ComponentRemoved = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.engineinterface.PB_ComponentRemoved, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.engineinterface.PB_ComponentRemoved.displayName = 'proto.engineinterface.PB_ComponentRemoved';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.engineinterface.PB_ComponentRemoved.prototype.toObject = function(opt_includeInstance) {
  return proto.engineinterface.PB_ComponentRemoved.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.engineinterface.PB_ComponentRemoved} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.PB_ComponentRemoved.toObject = function(includeInstance, msg) {
  var f, obj = {
    entityid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.engineinterface.PB_ComponentRemoved}
 */
proto.engineinterface.PB_ComponentRemoved.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.engineinterface.PB_ComponentRemoved;
  return proto.engineinterface.PB_ComponentRemoved.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.engineinterface.PB_ComponentRemoved} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.engineinterface.PB_ComponentRemoved}
 */
proto.engineinterface.PB_ComponentRemoved.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEntityid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.engineinterface.PB_ComponentRemoved.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.engineinterface.PB_ComponentRemoved.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.engineinterface.PB_ComponentRemoved} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.PB_ComponentRemoved.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntityid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string entityId = 1;
 * @return {string}
 */
proto.engineinterface.PB_ComponentRemoved.prototype.getEntityid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.engineinterface.PB_ComponentRemoved.prototype.setEntityid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.engineinterface.PB_ComponentRemoved.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.engineinterface.PB_ComponentRemoved.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.engineinterface.PB_Color = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.engineinterface.PB_Color, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.engineinterface.PB_Color.displayName = 'proto.engineinterface.PB_Color';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.engineinterface.PB_Color.prototype.toObject = function(opt_includeInstance) {
  return proto.engineinterface.PB_Color.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.engineinterface.PB_Color} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.PB_Color.toObject = function(includeInstance, msg) {
  var f, obj = {
    r: +jspb.Message.getFieldWithDefault(msg, 1, 0.0),
    g: +jspb.Message.getFieldWithDefault(msg, 2, 0.0),
    b: +jspb.Message.getFieldWithDefault(msg, 3, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.engineinterface.PB_Color}
 */
proto.engineinterface.PB_Color.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.engineinterface.PB_Color;
  return proto.engineinterface.PB_Color.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.engineinterface.PB_Color} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.engineinterface.PB_Color}
 */
proto.engineinterface.PB_Color.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setR(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setG(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setB(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.engineinterface.PB_Color.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.engineinterface.PB_Color.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.engineinterface.PB_Color} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.PB_Color.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getR();
  if (f !== 0.0) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = message.getG();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = message.getB();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
};


/**
 * optional float r = 1;
 * @return {number}
 */
proto.engineinterface.PB_Color.prototype.getR = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.engineinterface.PB_Color.prototype.setR = function(value) {
  jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional float g = 2;
 * @return {number}
 */
proto.engineinterface.PB_Color.prototype.getG = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.engineinterface.PB_Color.prototype.setG = function(value) {
  jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional float b = 3;
 * @return {number}
 */
proto.engineinterface.PB_Color.prototype.getB = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.engineinterface.PB_Color.prototype.setB = function(value) {
  jspb.Message.setProto3FloatField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.engineinterface.PB_TextShapeModel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.engineinterface.PB_TextShapeModel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.engineinterface.PB_TextShapeModel.displayName = 'proto.engineinterface.PB_TextShapeModel';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.engineinterface.PB_TextShapeModel.prototype.toObject = function(opt_includeInstance) {
  return proto.engineinterface.PB_TextShapeModel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.engineinterface.PB_TextShapeModel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.PB_TextShapeModel.toObject = function(includeInstance, msg) {
  var f, obj = {
    billboard: jspb.Message.getFieldWithDefault(msg, 1, false),
    value: jspb.Message.getFieldWithDefault(msg, 2, ""),
    color: (f = msg.getColor()) && proto.engineinterface.PB_Color.toObject(includeInstance, f),
    opacity: +jspb.Message.getFieldWithDefault(msg, 4, 0.0),
    fontsize: +jspb.Message.getFieldWithDefault(msg, 5, 0.0),
    fontautosize: jspb.Message.getFieldWithDefault(msg, 6, false),
    fontweight: jspb.Message.getFieldWithDefault(msg, 7, ""),
    htextalign: jspb.Message.getFieldWithDefault(msg, 8, ""),
    vtextalign: jspb.Message.getFieldWithDefault(msg, 9, ""),
    width: +jspb.Message.getFieldWithDefault(msg, 10, 0.0),
    height: +jspb.Message.getFieldWithDefault(msg, 11, 0.0),
    adaptwidth: jspb.Message.getFieldWithDefault(msg, 12, false),
    adaptheight: jspb.Message.getFieldWithDefault(msg, 13, false),
    paddingtop: +jspb.Message.getFieldWithDefault(msg, 14, 0.0),
    paddingright: +jspb.Message.getFieldWithDefault(msg, 15, 0.0),
    paddingbottom: +jspb.Message.getFieldWithDefault(msg, 16, 0.0),
    paddingleft: +jspb.Message.getFieldWithDefault(msg, 17, 0.0),
    linespacing: +jspb.Message.getFieldWithDefault(msg, 18, 0.0),
    linecount: jspb.Message.getFieldWithDefault(msg, 19, 0),
    textwrapping: jspb.Message.getFieldWithDefault(msg, 20, false),
    shadowblur: +jspb.Message.getFieldWithDefault(msg, 21, 0.0),
    shadowoffsetx: +jspb.Message.getFieldWithDefault(msg, 22, 0.0),
    shadowoffsety: +jspb.Message.getFieldWithDefault(msg, 23, 0.0),
    shadowcolor: (f = msg.getShadowcolor()) && proto.engineinterface.PB_Color.toObject(includeInstance, f),
    outlinewidth: +jspb.Message.getFieldWithDefault(msg, 25, 0.0),
    outlinecolor: (f = msg.getOutlinecolor()) && proto.engineinterface.PB_Color.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.engineinterface.PB_TextShapeModel}
 */
proto.engineinterface.PB_TextShapeModel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.engineinterface.PB_TextShapeModel;
  return proto.engineinterface.PB_TextShapeModel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.engineinterface.PB_TextShapeModel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.engineinterface.PB_TextShapeModel}
 */
proto.engineinterface.PB_TextShapeModel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBillboard(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 3:
      var value = new proto.engineinterface.PB_Color;
      reader.readMessage(value,proto.engineinterface.PB_Color.deserializeBinaryFromReader);
      msg.setColor(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setOpacity(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setFontsize(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFontautosize(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setFontweight(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setHtextalign(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setVtextalign(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setWidth(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setHeight(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAdaptwidth(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAdaptheight(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setPaddingtop(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setPaddingright(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setPaddingbottom(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setPaddingleft(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setLinespacing(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLinecount(value);
      break;
    case 20:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTextwrapping(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setShadowblur(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setShadowoffsetx(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setShadowoffsety(value);
      break;
    case 24:
      var value = new proto.engineinterface.PB_Color;
      reader.readMessage(value,proto.engineinterface.PB_Color.deserializeBinaryFromReader);
      msg.setShadowcolor(value);
      break;
    case 25:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setOutlinewidth(value);
      break;
    case 26:
      var value = new proto.engineinterface.PB_Color;
      reader.readMessage(value,proto.engineinterface.PB_Color.deserializeBinaryFromReader);
      msg.setOutlinecolor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.engineinterface.PB_TextShapeModel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.engineinterface.PB_TextShapeModel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.engineinterface.PB_TextShapeModel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.PB_TextShapeModel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBillboard();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getColor();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.engineinterface.PB_Color.serializeBinaryToWriter
    );
  }
  f = message.getOpacity();
  if (f !== 0.0) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = message.getFontsize();
  if (f !== 0.0) {
    writer.writeFloat(
      5,
      f
    );
  }
  f = message.getFontautosize();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getFontweight();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getHtextalign();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getVtextalign();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getWidth();
  if (f !== 0.0) {
    writer.writeFloat(
      10,
      f
    );
  }
  f = message.getHeight();
  if (f !== 0.0) {
    writer.writeFloat(
      11,
      f
    );
  }
  f = message.getAdaptwidth();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getAdaptheight();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getPaddingtop();
  if (f !== 0.0) {
    writer.writeFloat(
      14,
      f
    );
  }
  f = message.getPaddingright();
  if (f !== 0.0) {
    writer.writeFloat(
      15,
      f
    );
  }
  f = message.getPaddingbottom();
  if (f !== 0.0) {
    writer.writeFloat(
      16,
      f
    );
  }
  f = message.getPaddingleft();
  if (f !== 0.0) {
    writer.writeFloat(
      17,
      f
    );
  }
  f = message.getLinespacing();
  if (f !== 0.0) {
    writer.writeFloat(
      18,
      f
    );
  }
  f = message.getLinecount();
  if (f !== 0) {
    writer.writeInt32(
      19,
      f
    );
  }
  f = message.getTextwrapping();
  if (f) {
    writer.writeBool(
      20,
      f
    );
  }
  f = message.getShadowblur();
  if (f !== 0.0) {
    writer.writeFloat(
      21,
      f
    );
  }
  f = message.getShadowoffsetx();
  if (f !== 0.0) {
    writer.writeFloat(
      22,
      f
    );
  }
  f = message.getShadowoffsety();
  if (f !== 0.0) {
    writer.writeFloat(
      23,
      f
    );
  }
  f = message.getShadowcolor();
  if (f != null) {
    writer.writeMessage(
      24,
      f,
      proto.engineinterface.PB_Color.serializeBinaryToWriter
    );
  }
  f = message.getOutlinewidth();
  if (f !== 0.0) {
    writer.writeFloat(
      25,
      f
    );
  }
  f = message.getOutlinecolor();
  if (f != null) {
    writer.writeMessage(
      26,
      f,
      proto.engineinterface.PB_Color.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool billboard = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.engineinterface.PB_TextShapeModel.prototype.getBillboard = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.engineinterface.PB_TextShapeModel.prototype.setBillboard = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.engineinterface.PB_TextShapeModel.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.engineinterface.PB_TextShapeModel.prototype.setValue = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional PB_Color color = 3;
 * @return {?proto.engineinterface.PB_Color}
 */
proto.engineinterface.PB_TextShapeModel.prototype.getColor = function() {
  return /** @type{?proto.engineinterface.PB_Color} */ (
    jspb.Message.getWrapperField(this, proto.engineinterface.PB_Color, 3));
};


/** @param {?proto.engineinterface.PB_Color|undefined} value */
proto.engineinterface.PB_TextShapeModel.prototype.setColor = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.engineinterface.PB_TextShapeModel.prototype.clearColor = function() {
  this.setColor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.engineinterface.PB_TextShapeModel.prototype.hasColor = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional float opacity = 4;
 * @return {number}
 */
proto.engineinterface.PB_TextShapeModel.prototype.getOpacity = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 4, 0.0));
};


/** @param {number} value */
proto.engineinterface.PB_TextShapeModel.prototype.setOpacity = function(value) {
  jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional float fontSize = 5;
 * @return {number}
 */
proto.engineinterface.PB_TextShapeModel.prototype.getFontsize = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 5, 0.0));
};


/** @param {number} value */
proto.engineinterface.PB_TextShapeModel.prototype.setFontsize = function(value) {
  jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional bool fontAutoSize = 6;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.engineinterface.PB_TextShapeModel.prototype.getFontautosize = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 6, false));
};


/** @param {boolean} value */
proto.engineinterface.PB_TextShapeModel.prototype.setFontautosize = function(value) {
  jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional string fontWeight = 7;
 * @return {string}
 */
proto.engineinterface.PB_TextShapeModel.prototype.getFontweight = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.engineinterface.PB_TextShapeModel.prototype.setFontweight = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string hTextAlign = 8;
 * @return {string}
 */
proto.engineinterface.PB_TextShapeModel.prototype.getHtextalign = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.engineinterface.PB_TextShapeModel.prototype.setHtextalign = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string vTextAlign = 9;
 * @return {string}
 */
proto.engineinterface.PB_TextShapeModel.prototype.getVtextalign = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.engineinterface.PB_TextShapeModel.prototype.setVtextalign = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional float width = 10;
 * @return {number}
 */
proto.engineinterface.PB_TextShapeModel.prototype.getWidth = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 10, 0.0));
};


/** @param {number} value */
proto.engineinterface.PB_TextShapeModel.prototype.setWidth = function(value) {
  jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional float height = 11;
 * @return {number}
 */
proto.engineinterface.PB_TextShapeModel.prototype.getHeight = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 11, 0.0));
};


/** @param {number} value */
proto.engineinterface.PB_TextShapeModel.prototype.setHeight = function(value) {
  jspb.Message.setProto3FloatField(this, 11, value);
};


/**
 * optional bool adaptWidth = 12;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.engineinterface.PB_TextShapeModel.prototype.getAdaptwidth = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 12, false));
};


/** @param {boolean} value */
proto.engineinterface.PB_TextShapeModel.prototype.setAdaptwidth = function(value) {
  jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional bool adaptHeight = 13;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.engineinterface.PB_TextShapeModel.prototype.getAdaptheight = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 13, false));
};


/** @param {boolean} value */
proto.engineinterface.PB_TextShapeModel.prototype.setAdaptheight = function(value) {
  jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * optional float paddingTop = 14;
 * @return {number}
 */
proto.engineinterface.PB_TextShapeModel.prototype.getPaddingtop = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 14, 0.0));
};


/** @param {number} value */
proto.engineinterface.PB_TextShapeModel.prototype.setPaddingtop = function(value) {
  jspb.Message.setProto3FloatField(this, 14, value);
};


/**
 * optional float paddingRight = 15;
 * @return {number}
 */
proto.engineinterface.PB_TextShapeModel.prototype.getPaddingright = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 15, 0.0));
};


/** @param {number} value */
proto.engineinterface.PB_TextShapeModel.prototype.setPaddingright = function(value) {
  jspb.Message.setProto3FloatField(this, 15, value);
};


/**
 * optional float paddingBottom = 16;
 * @return {number}
 */
proto.engineinterface.PB_TextShapeModel.prototype.getPaddingbottom = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 16, 0.0));
};


/** @param {number} value */
proto.engineinterface.PB_TextShapeModel.prototype.setPaddingbottom = function(value) {
  jspb.Message.setProto3FloatField(this, 16, value);
};


/**
 * optional float paddingLeft = 17;
 * @return {number}
 */
proto.engineinterface.PB_TextShapeModel.prototype.getPaddingleft = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 17, 0.0));
};


/** @param {number} value */
proto.engineinterface.PB_TextShapeModel.prototype.setPaddingleft = function(value) {
  jspb.Message.setProto3FloatField(this, 17, value);
};


/**
 * optional float lineSpacing = 18;
 * @return {number}
 */
proto.engineinterface.PB_TextShapeModel.prototype.getLinespacing = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 18, 0.0));
};


/** @param {number} value */
proto.engineinterface.PB_TextShapeModel.prototype.setLinespacing = function(value) {
  jspb.Message.setProto3FloatField(this, 18, value);
};


/**
 * optional int32 lineCount = 19;
 * @return {number}
 */
proto.engineinterface.PB_TextShapeModel.prototype.getLinecount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/** @param {number} value */
proto.engineinterface.PB_TextShapeModel.prototype.setLinecount = function(value) {
  jspb.Message.setProto3IntField(this, 19, value);
};


/**
 * optional bool textWrapping = 20;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.engineinterface.PB_TextShapeModel.prototype.getTextwrapping = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 20, false));
};


/** @param {boolean} value */
proto.engineinterface.PB_TextShapeModel.prototype.setTextwrapping = function(value) {
  jspb.Message.setProto3BooleanField(this, 20, value);
};


/**
 * optional float shadowBlur = 21;
 * @return {number}
 */
proto.engineinterface.PB_TextShapeModel.prototype.getShadowblur = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 21, 0.0));
};


/** @param {number} value */
proto.engineinterface.PB_TextShapeModel.prototype.setShadowblur = function(value) {
  jspb.Message.setProto3FloatField(this, 21, value);
};


/**
 * optional float shadowOffsetX = 22;
 * @return {number}
 */
proto.engineinterface.PB_TextShapeModel.prototype.getShadowoffsetx = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 22, 0.0));
};


/** @param {number} value */
proto.engineinterface.PB_TextShapeModel.prototype.setShadowoffsetx = function(value) {
  jspb.Message.setProto3FloatField(this, 22, value);
};


/**
 * optional float shadowOffsetY = 23;
 * @return {number}
 */
proto.engineinterface.PB_TextShapeModel.prototype.getShadowoffsety = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 23, 0.0));
};


/** @param {number} value */
proto.engineinterface.PB_TextShapeModel.prototype.setShadowoffsety = function(value) {
  jspb.Message.setProto3FloatField(this, 23, value);
};


/**
 * optional PB_Color shadowColor = 24;
 * @return {?proto.engineinterface.PB_Color}
 */
proto.engineinterface.PB_TextShapeModel.prototype.getShadowcolor = function() {
  return /** @type{?proto.engineinterface.PB_Color} */ (
    jspb.Message.getWrapperField(this, proto.engineinterface.PB_Color, 24));
};


/** @param {?proto.engineinterface.PB_Color|undefined} value */
proto.engineinterface.PB_TextShapeModel.prototype.setShadowcolor = function(value) {
  jspb.Message.setWrapperField(this, 24, value);
};


proto.engineinterface.PB_TextShapeModel.prototype.clearShadowcolor = function() {
  this.setShadowcolor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.engineinterface.PB_TextShapeModel.prototype.hasShadowcolor = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional float outlineWidth = 25;
 * @return {number}
 */
proto.engineinterface.PB_TextShapeModel.prototype.getOutlinewidth = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 25, 0.0));
};


/** @param {number} value */
proto.engineinterface.PB_TextShapeModel.prototype.setOutlinewidth = function(value) {
  jspb.Message.setProto3FloatField(this, 25, value);
};


/**
 * optional PB_Color outlineColor = 26;
 * @return {?proto.engineinterface.PB_Color}
 */
proto.engineinterface.PB_TextShapeModel.prototype.getOutlinecolor = function() {
  return /** @type{?proto.engineinterface.PB_Color} */ (
    jspb.Message.getWrapperField(this, proto.engineinterface.PB_Color, 26));
};


/** @param {?proto.engineinterface.PB_Color|undefined} value */
proto.engineinterface.PB_TextShapeModel.prototype.setOutlinecolor = function(value) {
  jspb.Message.setWrapperField(this, 26, value);
};


proto.engineinterface.PB_TextShapeModel.prototype.clearOutlinecolor = function() {
  this.setOutlinecolor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.engineinterface.PB_TextShapeModel.prototype.hasOutlinecolor = function() {
  return jspb.Message.getField(this, 26) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.engineinterface.PB_Vector3 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.engineinterface.PB_Vector3, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.engineinterface.PB_Vector3.displayName = 'proto.engineinterface.PB_Vector3';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.engineinterface.PB_Vector3.prototype.toObject = function(opt_includeInstance) {
  return proto.engineinterface.PB_Vector3.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.engineinterface.PB_Vector3} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.PB_Vector3.toObject = function(includeInstance, msg) {
  var f, obj = {
    x: +jspb.Message.getFieldWithDefault(msg, 1, 0.0),
    y: +jspb.Message.getFieldWithDefault(msg, 2, 0.0),
    z: +jspb.Message.getFieldWithDefault(msg, 3, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.engineinterface.PB_Vector3}
 */
proto.engineinterface.PB_Vector3.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.engineinterface.PB_Vector3;
  return proto.engineinterface.PB_Vector3.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.engineinterface.PB_Vector3} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.engineinterface.PB_Vector3}
 */
proto.engineinterface.PB_Vector3.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setX(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setY(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setZ(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.engineinterface.PB_Vector3.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.engineinterface.PB_Vector3.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.engineinterface.PB_Vector3} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.PB_Vector3.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getX();
  if (f !== 0.0) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = message.getY();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = message.getZ();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
};


/**
 * optional float x = 1;
 * @return {number}
 */
proto.engineinterface.PB_Vector3.prototype.getX = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.engineinterface.PB_Vector3.prototype.setX = function(value) {
  jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional float y = 2;
 * @return {number}
 */
proto.engineinterface.PB_Vector3.prototype.getY = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.engineinterface.PB_Vector3.prototype.setY = function(value) {
  jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional float z = 3;
 * @return {number}
 */
proto.engineinterface.PB_Vector3.prototype.getZ = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.engineinterface.PB_Vector3.prototype.setZ = function(value) {
  jspb.Message.setProto3FloatField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.engineinterface.PB_Quaternion = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.engineinterface.PB_Quaternion, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.engineinterface.PB_Quaternion.displayName = 'proto.engineinterface.PB_Quaternion';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.engineinterface.PB_Quaternion.prototype.toObject = function(opt_includeInstance) {
  return proto.engineinterface.PB_Quaternion.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.engineinterface.PB_Quaternion} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.PB_Quaternion.toObject = function(includeInstance, msg) {
  var f, obj = {
    x: +jspb.Message.getFieldWithDefault(msg, 1, 0.0),
    y: +jspb.Message.getFieldWithDefault(msg, 2, 0.0),
    z: +jspb.Message.getFieldWithDefault(msg, 3, 0.0),
    w: +jspb.Message.getFieldWithDefault(msg, 4, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.engineinterface.PB_Quaternion}
 */
proto.engineinterface.PB_Quaternion.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.engineinterface.PB_Quaternion;
  return proto.engineinterface.PB_Quaternion.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.engineinterface.PB_Quaternion} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.engineinterface.PB_Quaternion}
 */
proto.engineinterface.PB_Quaternion.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setX(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setY(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setZ(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setW(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.engineinterface.PB_Quaternion.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.engineinterface.PB_Quaternion.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.engineinterface.PB_Quaternion} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.PB_Quaternion.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getX();
  if (f !== 0.0) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = message.getY();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = message.getZ();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = message.getW();
  if (f !== 0.0) {
    writer.writeFloat(
      4,
      f
    );
  }
};


/**
 * optional float x = 1;
 * @return {number}
 */
proto.engineinterface.PB_Quaternion.prototype.getX = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.engineinterface.PB_Quaternion.prototype.setX = function(value) {
  jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional float y = 2;
 * @return {number}
 */
proto.engineinterface.PB_Quaternion.prototype.getY = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.engineinterface.PB_Quaternion.prototype.setY = function(value) {
  jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional float z = 3;
 * @return {number}
 */
proto.engineinterface.PB_Quaternion.prototype.getZ = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.engineinterface.PB_Quaternion.prototype.setZ = function(value) {
  jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional float w = 4;
 * @return {number}
 */
proto.engineinterface.PB_Quaternion.prototype.getW = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 4, 0.0));
};


/** @param {number} value */
proto.engineinterface.PB_Quaternion.prototype.setW = function(value) {
  jspb.Message.setProto3FloatField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.engineinterface.PB_Transform = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.engineinterface.PB_Transform, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.engineinterface.PB_Transform.displayName = 'proto.engineinterface.PB_Transform';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.engineinterface.PB_Transform.prototype.toObject = function(opt_includeInstance) {
  return proto.engineinterface.PB_Transform.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.engineinterface.PB_Transform} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.PB_Transform.toObject = function(includeInstance, msg) {
  var f, obj = {
    position: (f = msg.getPosition()) && proto.engineinterface.PB_Vector3.toObject(includeInstance, f),
    rotation: (f = msg.getRotation()) && proto.engineinterface.PB_Quaternion.toObject(includeInstance, f),
    scale: (f = msg.getScale()) && proto.engineinterface.PB_Vector3.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.engineinterface.PB_Transform}
 */
proto.engineinterface.PB_Transform.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.engineinterface.PB_Transform;
  return proto.engineinterface.PB_Transform.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.engineinterface.PB_Transform} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.engineinterface.PB_Transform}
 */
proto.engineinterface.PB_Transform.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.engineinterface.PB_Vector3;
      reader.readMessage(value,proto.engineinterface.PB_Vector3.deserializeBinaryFromReader);
      msg.setPosition(value);
      break;
    case 2:
      var value = new proto.engineinterface.PB_Quaternion;
      reader.readMessage(value,proto.engineinterface.PB_Quaternion.deserializeBinaryFromReader);
      msg.setRotation(value);
      break;
    case 3:
      var value = new proto.engineinterface.PB_Vector3;
      reader.readMessage(value,proto.engineinterface.PB_Vector3.deserializeBinaryFromReader);
      msg.setScale(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.engineinterface.PB_Transform.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.engineinterface.PB_Transform.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.engineinterface.PB_Transform} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.PB_Transform.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPosition();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.engineinterface.PB_Vector3.serializeBinaryToWriter
    );
  }
  f = message.getRotation();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.engineinterface.PB_Quaternion.serializeBinaryToWriter
    );
  }
  f = message.getScale();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.engineinterface.PB_Vector3.serializeBinaryToWriter
    );
  }
};


/**
 * optional PB_Vector3 position = 1;
 * @return {?proto.engineinterface.PB_Vector3}
 */
proto.engineinterface.PB_Transform.prototype.getPosition = function() {
  return /** @type{?proto.engineinterface.PB_Vector3} */ (
    jspb.Message.getWrapperField(this, proto.engineinterface.PB_Vector3, 1));
};


/** @param {?proto.engineinterface.PB_Vector3|undefined} value */
proto.engineinterface.PB_Transform.prototype.setPosition = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.engineinterface.PB_Transform.prototype.clearPosition = function() {
  this.setPosition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.engineinterface.PB_Transform.prototype.hasPosition = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional PB_Quaternion rotation = 2;
 * @return {?proto.engineinterface.PB_Quaternion}
 */
proto.engineinterface.PB_Transform.prototype.getRotation = function() {
  return /** @type{?proto.engineinterface.PB_Quaternion} */ (
    jspb.Message.getWrapperField(this, proto.engineinterface.PB_Quaternion, 2));
};


/** @param {?proto.engineinterface.PB_Quaternion|undefined} value */
proto.engineinterface.PB_Transform.prototype.setRotation = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.engineinterface.PB_Transform.prototype.clearRotation = function() {
  this.setRotation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.engineinterface.PB_Transform.prototype.hasRotation = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional PB_Vector3 scale = 3;
 * @return {?proto.engineinterface.PB_Vector3}
 */
proto.engineinterface.PB_Transform.prototype.getScale = function() {
  return /** @type{?proto.engineinterface.PB_Vector3} */ (
    jspb.Message.getWrapperField(this, proto.engineinterface.PB_Vector3, 3));
};


/** @param {?proto.engineinterface.PB_Vector3|undefined} value */
proto.engineinterface.PB_Transform.prototype.setScale = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.engineinterface.PB_Transform.prototype.clearScale = function() {
  this.setScale(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.engineinterface.PB_Transform.prototype.hasScale = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.engineinterface.PB_UpdateEntityComponent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.engineinterface.PB_UpdateEntityComponent.oneofGroups_);
};
goog.inherits(proto.engineinterface.PB_UpdateEntityComponent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.engineinterface.PB_UpdateEntityComponent.displayName = 'proto.engineinterface.PB_UpdateEntityComponent';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.engineinterface.PB_UpdateEntityComponent.oneofGroups_ = [[4,5]];

/**
 * @enum {number}
 */
proto.engineinterface.PB_UpdateEntityComponent.ModelCase = {
  MODEL_NOT_SET: 0,
  TRANSFORM: 4,
  JSON: 5
};

/**
 * @return {proto.engineinterface.PB_UpdateEntityComponent.ModelCase}
 */
proto.engineinterface.PB_UpdateEntityComponent.prototype.getModelCase = function() {
  return /** @type {proto.engineinterface.PB_UpdateEntityComponent.ModelCase} */(jspb.Message.computeOneofCase(this, proto.engineinterface.PB_UpdateEntityComponent.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.engineinterface.PB_UpdateEntityComponent.prototype.toObject = function(opt_includeInstance) {
  return proto.engineinterface.PB_UpdateEntityComponent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.engineinterface.PB_UpdateEntityComponent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.PB_UpdateEntityComponent.toObject = function(includeInstance, msg) {
  var f, obj = {
    entityid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    classid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    transform: (f = msg.getTransform()) && proto.engineinterface.PB_Transform.toObject(includeInstance, f),
    json: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.engineinterface.PB_UpdateEntityComponent}
 */
proto.engineinterface.PB_UpdateEntityComponent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.engineinterface.PB_UpdateEntityComponent;
  return proto.engineinterface.PB_UpdateEntityComponent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.engineinterface.PB_UpdateEntityComponent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.engineinterface.PB_UpdateEntityComponent}
 */
proto.engineinterface.PB_UpdateEntityComponent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEntityid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setClassid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = new proto.engineinterface.PB_Transform;
      reader.readMessage(value,proto.engineinterface.PB_Transform.deserializeBinaryFromReader);
      msg.setTransform(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setJson(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.engineinterface.PB_UpdateEntityComponent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.engineinterface.PB_UpdateEntityComponent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.engineinterface.PB_UpdateEntityComponent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.PB_UpdateEntityComponent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntityid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getClassid();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTransform();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.engineinterface.PB_Transform.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string entityId = 1;
 * @return {string}
 */
proto.engineinterface.PB_UpdateEntityComponent.prototype.getEntityid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.engineinterface.PB_UpdateEntityComponent.prototype.setEntityid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 classId = 2;
 * @return {number}
 */
proto.engineinterface.PB_UpdateEntityComponent.prototype.getClassid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.engineinterface.PB_UpdateEntityComponent.prototype.setClassid = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.engineinterface.PB_UpdateEntityComponent.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.engineinterface.PB_UpdateEntityComponent.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional PB_Transform transform = 4;
 * @return {?proto.engineinterface.PB_Transform}
 */
proto.engineinterface.PB_UpdateEntityComponent.prototype.getTransform = function() {
  return /** @type{?proto.engineinterface.PB_Transform} */ (
    jspb.Message.getWrapperField(this, proto.engineinterface.PB_Transform, 4));
};


/** @param {?proto.engineinterface.PB_Transform|undefined} value */
proto.engineinterface.PB_UpdateEntityComponent.prototype.setTransform = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.engineinterface.PB_UpdateEntityComponent.oneofGroups_[0], value);
};


proto.engineinterface.PB_UpdateEntityComponent.prototype.clearTransform = function() {
  this.setTransform(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.engineinterface.PB_UpdateEntityComponent.prototype.hasTransform = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string json = 5;
 * @return {string}
 */
proto.engineinterface.PB_UpdateEntityComponent.prototype.getJson = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.engineinterface.PB_UpdateEntityComponent.prototype.setJson = function(value) {
  jspb.Message.setOneofField(this, 5, proto.engineinterface.PB_UpdateEntityComponent.oneofGroups_[0], value);
};


proto.engineinterface.PB_UpdateEntityComponent.prototype.clearJson = function() {
  jspb.Message.setOneofField(this, 5, proto.engineinterface.PB_UpdateEntityComponent.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.engineinterface.PB_UpdateEntityComponent.prototype.hasJson = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.engineinterface.PB_ComponentCreated = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.engineinterface.PB_ComponentCreated, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.engineinterface.PB_ComponentCreated.displayName = 'proto.engineinterface.PB_ComponentCreated';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.engineinterface.PB_ComponentCreated.prototype.toObject = function(opt_includeInstance) {
  return proto.engineinterface.PB_ComponentCreated.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.engineinterface.PB_ComponentCreated} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.PB_ComponentCreated.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    classid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    name: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.engineinterface.PB_ComponentCreated}
 */
proto.engineinterface.PB_ComponentCreated.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.engineinterface.PB_ComponentCreated;
  return proto.engineinterface.PB_ComponentCreated.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.engineinterface.PB_ComponentCreated} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.engineinterface.PB_ComponentCreated}
 */
proto.engineinterface.PB_ComponentCreated.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setClassid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.engineinterface.PB_ComponentCreated.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.engineinterface.PB_ComponentCreated.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.engineinterface.PB_ComponentCreated} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.PB_ComponentCreated.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getClassid();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.engineinterface.PB_ComponentCreated.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.engineinterface.PB_ComponentCreated.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 classid = 2;
 * @return {number}
 */
proto.engineinterface.PB_ComponentCreated.prototype.getClassid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.engineinterface.PB_ComponentCreated.prototype.setClassid = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.engineinterface.PB_ComponentCreated.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.engineinterface.PB_ComponentCreated.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.engineinterface.PB_AttachEntityComponent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.engineinterface.PB_AttachEntityComponent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.engineinterface.PB_AttachEntityComponent.displayName = 'proto.engineinterface.PB_AttachEntityComponent';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.engineinterface.PB_AttachEntityComponent.prototype.toObject = function(opt_includeInstance) {
  return proto.engineinterface.PB_AttachEntityComponent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.engineinterface.PB_AttachEntityComponent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.PB_AttachEntityComponent.toObject = function(includeInstance, msg) {
  var f, obj = {
    entityid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    id: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.engineinterface.PB_AttachEntityComponent}
 */
proto.engineinterface.PB_AttachEntityComponent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.engineinterface.PB_AttachEntityComponent;
  return proto.engineinterface.PB_AttachEntityComponent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.engineinterface.PB_AttachEntityComponent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.engineinterface.PB_AttachEntityComponent}
 */
proto.engineinterface.PB_AttachEntityComponent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEntityid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.engineinterface.PB_AttachEntityComponent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.engineinterface.PB_AttachEntityComponent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.engineinterface.PB_AttachEntityComponent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.PB_AttachEntityComponent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntityid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string entityId = 1;
 * @return {string}
 */
proto.engineinterface.PB_AttachEntityComponent.prototype.getEntityid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.engineinterface.PB_AttachEntityComponent.prototype.setEntityid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.engineinterface.PB_AttachEntityComponent.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.engineinterface.PB_AttachEntityComponent.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string id = 3;
 * @return {string}
 */
proto.engineinterface.PB_AttachEntityComponent.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.engineinterface.PB_AttachEntityComponent.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.engineinterface.PB_ComponentDisposed = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.engineinterface.PB_ComponentDisposed, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.engineinterface.PB_ComponentDisposed.displayName = 'proto.engineinterface.PB_ComponentDisposed';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.engineinterface.PB_ComponentDisposed.prototype.toObject = function(opt_includeInstance) {
  return proto.engineinterface.PB_ComponentDisposed.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.engineinterface.PB_ComponentDisposed} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.PB_ComponentDisposed.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.engineinterface.PB_ComponentDisposed}
 */
proto.engineinterface.PB_ComponentDisposed.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.engineinterface.PB_ComponentDisposed;
  return proto.engineinterface.PB_ComponentDisposed.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.engineinterface.PB_ComponentDisposed} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.engineinterface.PB_ComponentDisposed}
 */
proto.engineinterface.PB_ComponentDisposed.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.engineinterface.PB_ComponentDisposed.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.engineinterface.PB_ComponentDisposed.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.engineinterface.PB_ComponentDisposed} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.PB_ComponentDisposed.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.engineinterface.PB_ComponentDisposed.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.engineinterface.PB_ComponentDisposed.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.engineinterface.PB_ComponentUpdated = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.engineinterface.PB_ComponentUpdated, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.engineinterface.PB_ComponentUpdated.displayName = 'proto.engineinterface.PB_ComponentUpdated';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.engineinterface.PB_ComponentUpdated.prototype.toObject = function(opt_includeInstance) {
  return proto.engineinterface.PB_ComponentUpdated.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.engineinterface.PB_ComponentUpdated} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.PB_ComponentUpdated.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    json: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.engineinterface.PB_ComponentUpdated}
 */
proto.engineinterface.PB_ComponentUpdated.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.engineinterface.PB_ComponentUpdated;
  return proto.engineinterface.PB_ComponentUpdated.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.engineinterface.PB_ComponentUpdated} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.engineinterface.PB_ComponentUpdated}
 */
proto.engineinterface.PB_ComponentUpdated.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setJson(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.engineinterface.PB_ComponentUpdated.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.engineinterface.PB_ComponentUpdated.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.engineinterface.PB_ComponentUpdated} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.PB_ComponentUpdated.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getJson();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.engineinterface.PB_ComponentUpdated.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.engineinterface.PB_ComponentUpdated.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string json = 2;
 * @return {string}
 */
proto.engineinterface.PB_ComponentUpdated.prototype.getJson = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.engineinterface.PB_ComponentUpdated.prototype.setJson = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.engineinterface.PB_Ray = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.engineinterface.PB_Ray, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.engineinterface.PB_Ray.displayName = 'proto.engineinterface.PB_Ray';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.engineinterface.PB_Ray.prototype.toObject = function(opt_includeInstance) {
  return proto.engineinterface.PB_Ray.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.engineinterface.PB_Ray} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.PB_Ray.toObject = function(includeInstance, msg) {
  var f, obj = {
    origin: (f = msg.getOrigin()) && proto.engineinterface.PB_Vector3.toObject(includeInstance, f),
    direction: (f = msg.getDirection()) && proto.engineinterface.PB_Vector3.toObject(includeInstance, f),
    distance: +jspb.Message.getFieldWithDefault(msg, 3, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.engineinterface.PB_Ray}
 */
proto.engineinterface.PB_Ray.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.engineinterface.PB_Ray;
  return proto.engineinterface.PB_Ray.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.engineinterface.PB_Ray} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.engineinterface.PB_Ray}
 */
proto.engineinterface.PB_Ray.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.engineinterface.PB_Vector3;
      reader.readMessage(value,proto.engineinterface.PB_Vector3.deserializeBinaryFromReader);
      msg.setOrigin(value);
      break;
    case 2:
      var value = new proto.engineinterface.PB_Vector3;
      reader.readMessage(value,proto.engineinterface.PB_Vector3.deserializeBinaryFromReader);
      msg.setDirection(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setDistance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.engineinterface.PB_Ray.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.engineinterface.PB_Ray.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.engineinterface.PB_Ray} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.PB_Ray.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrigin();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.engineinterface.PB_Vector3.serializeBinaryToWriter
    );
  }
  f = message.getDirection();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.engineinterface.PB_Vector3.serializeBinaryToWriter
    );
  }
  f = message.getDistance();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
};


/**
 * optional PB_Vector3 origin = 1;
 * @return {?proto.engineinterface.PB_Vector3}
 */
proto.engineinterface.PB_Ray.prototype.getOrigin = function() {
  return /** @type{?proto.engineinterface.PB_Vector3} */ (
    jspb.Message.getWrapperField(this, proto.engineinterface.PB_Vector3, 1));
};


/** @param {?proto.engineinterface.PB_Vector3|undefined} value */
proto.engineinterface.PB_Ray.prototype.setOrigin = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.engineinterface.PB_Ray.prototype.clearOrigin = function() {
  this.setOrigin(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.engineinterface.PB_Ray.prototype.hasOrigin = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional PB_Vector3 direction = 2;
 * @return {?proto.engineinterface.PB_Vector3}
 */
proto.engineinterface.PB_Ray.prototype.getDirection = function() {
  return /** @type{?proto.engineinterface.PB_Vector3} */ (
    jspb.Message.getWrapperField(this, proto.engineinterface.PB_Vector3, 2));
};


/** @param {?proto.engineinterface.PB_Vector3|undefined} value */
proto.engineinterface.PB_Ray.prototype.setDirection = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.engineinterface.PB_Ray.prototype.clearDirection = function() {
  this.setDirection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.engineinterface.PB_Ray.prototype.hasDirection = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional float distance = 3;
 * @return {number}
 */
proto.engineinterface.PB_Ray.prototype.getDistance = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.engineinterface.PB_Ray.prototype.setDistance = function(value) {
  jspb.Message.setProto3FloatField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.engineinterface.PB_RayQuery = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.engineinterface.PB_RayQuery, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.engineinterface.PB_RayQuery.displayName = 'proto.engineinterface.PB_RayQuery';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.engineinterface.PB_RayQuery.prototype.toObject = function(opt_includeInstance) {
  return proto.engineinterface.PB_RayQuery.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.engineinterface.PB_RayQuery} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.PB_RayQuery.toObject = function(includeInstance, msg) {
  var f, obj = {
    queryid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    querytype: jspb.Message.getFieldWithDefault(msg, 2, ""),
    ray: (f = msg.getRay()) && proto.engineinterface.PB_Ray.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.engineinterface.PB_RayQuery}
 */
proto.engineinterface.PB_RayQuery.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.engineinterface.PB_RayQuery;
  return proto.engineinterface.PB_RayQuery.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.engineinterface.PB_RayQuery} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.engineinterface.PB_RayQuery}
 */
proto.engineinterface.PB_RayQuery.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQueryid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuerytype(value);
      break;
    case 3:
      var value = new proto.engineinterface.PB_Ray;
      reader.readMessage(value,proto.engineinterface.PB_Ray.deserializeBinaryFromReader);
      msg.setRay(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.engineinterface.PB_RayQuery.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.engineinterface.PB_RayQuery.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.engineinterface.PB_RayQuery} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.PB_RayQuery.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQueryid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getQuerytype();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRay();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.engineinterface.PB_Ray.serializeBinaryToWriter
    );
  }
};


/**
 * optional string queryId = 1;
 * @return {string}
 */
proto.engineinterface.PB_RayQuery.prototype.getQueryid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.engineinterface.PB_RayQuery.prototype.setQueryid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string queryType = 2;
 * @return {string}
 */
proto.engineinterface.PB_RayQuery.prototype.getQuerytype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.engineinterface.PB_RayQuery.prototype.setQuerytype = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional PB_Ray ray = 3;
 * @return {?proto.engineinterface.PB_Ray}
 */
proto.engineinterface.PB_RayQuery.prototype.getRay = function() {
  return /** @type{?proto.engineinterface.PB_Ray} */ (
    jspb.Message.getWrapperField(this, proto.engineinterface.PB_Ray, 3));
};


/** @param {?proto.engineinterface.PB_Ray|undefined} value */
proto.engineinterface.PB_RayQuery.prototype.setRay = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.engineinterface.PB_RayQuery.prototype.clearRay = function() {
  this.setRay(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.engineinterface.PB_RayQuery.prototype.hasRay = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.engineinterface.PB_Query = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.engineinterface.PB_Query, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.engineinterface.PB_Query.displayName = 'proto.engineinterface.PB_Query';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.engineinterface.PB_Query.prototype.toObject = function(opt_includeInstance) {
  return proto.engineinterface.PB_Query.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.engineinterface.PB_Query} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.PB_Query.toObject = function(includeInstance, msg) {
  var f, obj = {
    queryid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    payload: (f = msg.getPayload()) && proto.engineinterface.PB_RayQuery.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.engineinterface.PB_Query}
 */
proto.engineinterface.PB_Query.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.engineinterface.PB_Query;
  return proto.engineinterface.PB_Query.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.engineinterface.PB_Query} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.engineinterface.PB_Query}
 */
proto.engineinterface.PB_Query.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQueryid(value);
      break;
    case 2:
      var value = new proto.engineinterface.PB_RayQuery;
      reader.readMessage(value,proto.engineinterface.PB_RayQuery.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.engineinterface.PB_Query.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.engineinterface.PB_Query.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.engineinterface.PB_Query} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.PB_Query.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQueryid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.engineinterface.PB_RayQuery.serializeBinaryToWriter
    );
  }
};


/**
 * optional string queryId = 1;
 * @return {string}
 */
proto.engineinterface.PB_Query.prototype.getQueryid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.engineinterface.PB_Query.prototype.setQueryid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional PB_RayQuery payload = 2;
 * @return {?proto.engineinterface.PB_RayQuery}
 */
proto.engineinterface.PB_Query.prototype.getPayload = function() {
  return /** @type{?proto.engineinterface.PB_RayQuery} */ (
    jspb.Message.getWrapperField(this, proto.engineinterface.PB_RayQuery, 2));
};


/** @param {?proto.engineinterface.PB_RayQuery|undefined} value */
proto.engineinterface.PB_Query.prototype.setPayload = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.engineinterface.PB_Query.prototype.clearPayload = function() {
  this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.engineinterface.PB_Query.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.engineinterface.PB_SendSceneMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.engineinterface.PB_SendSceneMessage.oneofGroups_);
};
goog.inherits(proto.engineinterface.PB_SendSceneMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.engineinterface.PB_SendSceneMessage.displayName = 'proto.engineinterface.PB_SendSceneMessage';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.engineinterface.PB_SendSceneMessage.oneofGroups_ = [[3,4,5,6,7,8,9,10,11,12,13]];

/**
 * @enum {number}
 */
proto.engineinterface.PB_SendSceneMessage.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  CREATEENTITY: 3,
  REMOVEENTITY: 4,
  SETENTITYPARENT: 5,
  UPDATEENTITYCOMPONENT: 6,
  ATTACHENTITYCOMPONENT: 7,
  COMPONENTCREATED: 8,
  COMPONENTDISPOSED: 9,
  COMPONENTREMOVED: 10,
  COMPONENTUPDATED: 11,
  QUERY: 12,
  SCENESTARTED: 13
};

/**
 * @return {proto.engineinterface.PB_SendSceneMessage.PayloadCase}
 */
proto.engineinterface.PB_SendSceneMessage.prototype.getPayloadCase = function() {
  return /** @type {proto.engineinterface.PB_SendSceneMessage.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.engineinterface.PB_SendSceneMessage.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.engineinterface.PB_SendSceneMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.engineinterface.PB_SendSceneMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.engineinterface.PB_SendSceneMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.PB_SendSceneMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    sceneid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tag: jspb.Message.getFieldWithDefault(msg, 2, ""),
    createentity: (f = msg.getCreateentity()) && proto.engineinterface.PB_CreateEntity.toObject(includeInstance, f),
    removeentity: (f = msg.getRemoveentity()) && proto.engineinterface.PB_RemoveEntity.toObject(includeInstance, f),
    setentityparent: (f = msg.getSetentityparent()) && proto.engineinterface.PB_SetEntityParent.toObject(includeInstance, f),
    updateentitycomponent: (f = msg.getUpdateentitycomponent()) && proto.engineinterface.PB_UpdateEntityComponent.toObject(includeInstance, f),
    attachentitycomponent: (f = msg.getAttachentitycomponent()) && proto.engineinterface.PB_AttachEntityComponent.toObject(includeInstance, f),
    componentcreated: (f = msg.getComponentcreated()) && proto.engineinterface.PB_ComponentCreated.toObject(includeInstance, f),
    componentdisposed: (f = msg.getComponentdisposed()) && proto.engineinterface.PB_ComponentDisposed.toObject(includeInstance, f),
    componentremoved: (f = msg.getComponentremoved()) && proto.engineinterface.PB_ComponentRemoved.toObject(includeInstance, f),
    componentupdated: (f = msg.getComponentupdated()) && proto.engineinterface.PB_ComponentUpdated.toObject(includeInstance, f),
    query: (f = msg.getQuery()) && proto.engineinterface.PB_Query.toObject(includeInstance, f),
    scenestarted: (f = msg.getScenestarted()) && google_protobuf_empty_pb.Empty.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.engineinterface.PB_SendSceneMessage}
 */
proto.engineinterface.PB_SendSceneMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.engineinterface.PB_SendSceneMessage;
  return proto.engineinterface.PB_SendSceneMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.engineinterface.PB_SendSceneMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.engineinterface.PB_SendSceneMessage}
 */
proto.engineinterface.PB_SendSceneMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSceneid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTag(value);
      break;
    case 3:
      var value = new proto.engineinterface.PB_CreateEntity;
      reader.readMessage(value,proto.engineinterface.PB_CreateEntity.deserializeBinaryFromReader);
      msg.setCreateentity(value);
      break;
    case 4:
      var value = new proto.engineinterface.PB_RemoveEntity;
      reader.readMessage(value,proto.engineinterface.PB_RemoveEntity.deserializeBinaryFromReader);
      msg.setRemoveentity(value);
      break;
    case 5:
      var value = new proto.engineinterface.PB_SetEntityParent;
      reader.readMessage(value,proto.engineinterface.PB_SetEntityParent.deserializeBinaryFromReader);
      msg.setSetentityparent(value);
      break;
    case 6:
      var value = new proto.engineinterface.PB_UpdateEntityComponent;
      reader.readMessage(value,proto.engineinterface.PB_UpdateEntityComponent.deserializeBinaryFromReader);
      msg.setUpdateentitycomponent(value);
      break;
    case 7:
      var value = new proto.engineinterface.PB_AttachEntityComponent;
      reader.readMessage(value,proto.engineinterface.PB_AttachEntityComponent.deserializeBinaryFromReader);
      msg.setAttachentitycomponent(value);
      break;
    case 8:
      var value = new proto.engineinterface.PB_ComponentCreated;
      reader.readMessage(value,proto.engineinterface.PB_ComponentCreated.deserializeBinaryFromReader);
      msg.setComponentcreated(value);
      break;
    case 9:
      var value = new proto.engineinterface.PB_ComponentDisposed;
      reader.readMessage(value,proto.engineinterface.PB_ComponentDisposed.deserializeBinaryFromReader);
      msg.setComponentdisposed(value);
      break;
    case 10:
      var value = new proto.engineinterface.PB_ComponentRemoved;
      reader.readMessage(value,proto.engineinterface.PB_ComponentRemoved.deserializeBinaryFromReader);
      msg.setComponentremoved(value);
      break;
    case 11:
      var value = new proto.engineinterface.PB_ComponentUpdated;
      reader.readMessage(value,proto.engineinterface.PB_ComponentUpdated.deserializeBinaryFromReader);
      msg.setComponentupdated(value);
      break;
    case 12:
      var value = new proto.engineinterface.PB_Query;
      reader.readMessage(value,proto.engineinterface.PB_Query.deserializeBinaryFromReader);
      msg.setQuery(value);
      break;
    case 13:
      var value = new google_protobuf_empty_pb.Empty;
      reader.readMessage(value,google_protobuf_empty_pb.Empty.deserializeBinaryFromReader);
      msg.setScenestarted(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.engineinterface.PB_SendSceneMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.engineinterface.PB_SendSceneMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.engineinterface.PB_SendSceneMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.PB_SendSceneMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSceneid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTag();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCreateentity();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.engineinterface.PB_CreateEntity.serializeBinaryToWriter
    );
  }
  f = message.getRemoveentity();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.engineinterface.PB_RemoveEntity.serializeBinaryToWriter
    );
  }
  f = message.getSetentityparent();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.engineinterface.PB_SetEntityParent.serializeBinaryToWriter
    );
  }
  f = message.getUpdateentitycomponent();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.engineinterface.PB_UpdateEntityComponent.serializeBinaryToWriter
    );
  }
  f = message.getAttachentitycomponent();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.engineinterface.PB_AttachEntityComponent.serializeBinaryToWriter
    );
  }
  f = message.getComponentcreated();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.engineinterface.PB_ComponentCreated.serializeBinaryToWriter
    );
  }
  f = message.getComponentdisposed();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.engineinterface.PB_ComponentDisposed.serializeBinaryToWriter
    );
  }
  f = message.getComponentremoved();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.engineinterface.PB_ComponentRemoved.serializeBinaryToWriter
    );
  }
  f = message.getComponentupdated();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.engineinterface.PB_ComponentUpdated.serializeBinaryToWriter
    );
  }
  f = message.getQuery();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.engineinterface.PB_Query.serializeBinaryToWriter
    );
  }
  f = message.getScenestarted();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      google_protobuf_empty_pb.Empty.serializeBinaryToWriter
    );
  }
};


/**
 * optional string sceneId = 1;
 * @return {string}
 */
proto.engineinterface.PB_SendSceneMessage.prototype.getSceneid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.engineinterface.PB_SendSceneMessage.prototype.setSceneid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string tag = 2;
 * @return {string}
 */
proto.engineinterface.PB_SendSceneMessage.prototype.getTag = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.engineinterface.PB_SendSceneMessage.prototype.setTag = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional PB_CreateEntity createEntity = 3;
 * @return {?proto.engineinterface.PB_CreateEntity}
 */
proto.engineinterface.PB_SendSceneMessage.prototype.getCreateentity = function() {
  return /** @type{?proto.engineinterface.PB_CreateEntity} */ (
    jspb.Message.getWrapperField(this, proto.engineinterface.PB_CreateEntity, 3));
};


/** @param {?proto.engineinterface.PB_CreateEntity|undefined} value */
proto.engineinterface.PB_SendSceneMessage.prototype.setCreateentity = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.engineinterface.PB_SendSceneMessage.oneofGroups_[0], value);
};


proto.engineinterface.PB_SendSceneMessage.prototype.clearCreateentity = function() {
  this.setCreateentity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.engineinterface.PB_SendSceneMessage.prototype.hasCreateentity = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional PB_RemoveEntity removeEntity = 4;
 * @return {?proto.engineinterface.PB_RemoveEntity}
 */
proto.engineinterface.PB_SendSceneMessage.prototype.getRemoveentity = function() {
  return /** @type{?proto.engineinterface.PB_RemoveEntity} */ (
    jspb.Message.getWrapperField(this, proto.engineinterface.PB_RemoveEntity, 4));
};


/** @param {?proto.engineinterface.PB_RemoveEntity|undefined} value */
proto.engineinterface.PB_SendSceneMessage.prototype.setRemoveentity = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.engineinterface.PB_SendSceneMessage.oneofGroups_[0], value);
};


proto.engineinterface.PB_SendSceneMessage.prototype.clearRemoveentity = function() {
  this.setRemoveentity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.engineinterface.PB_SendSceneMessage.prototype.hasRemoveentity = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional PB_SetEntityParent setEntityParent = 5;
 * @return {?proto.engineinterface.PB_SetEntityParent}
 */
proto.engineinterface.PB_SendSceneMessage.prototype.getSetentityparent = function() {
  return /** @type{?proto.engineinterface.PB_SetEntityParent} */ (
    jspb.Message.getWrapperField(this, proto.engineinterface.PB_SetEntityParent, 5));
};


/** @param {?proto.engineinterface.PB_SetEntityParent|undefined} value */
proto.engineinterface.PB_SendSceneMessage.prototype.setSetentityparent = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.engineinterface.PB_SendSceneMessage.oneofGroups_[0], value);
};


proto.engineinterface.PB_SendSceneMessage.prototype.clearSetentityparent = function() {
  this.setSetentityparent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.engineinterface.PB_SendSceneMessage.prototype.hasSetentityparent = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional PB_UpdateEntityComponent updateEntityComponent = 6;
 * @return {?proto.engineinterface.PB_UpdateEntityComponent}
 */
proto.engineinterface.PB_SendSceneMessage.prototype.getUpdateentitycomponent = function() {
  return /** @type{?proto.engineinterface.PB_UpdateEntityComponent} */ (
    jspb.Message.getWrapperField(this, proto.engineinterface.PB_UpdateEntityComponent, 6));
};


/** @param {?proto.engineinterface.PB_UpdateEntityComponent|undefined} value */
proto.engineinterface.PB_SendSceneMessage.prototype.setUpdateentitycomponent = function(value) {
  jspb.Message.setOneofWrapperField(this, 6, proto.engineinterface.PB_SendSceneMessage.oneofGroups_[0], value);
};


proto.engineinterface.PB_SendSceneMessage.prototype.clearUpdateentitycomponent = function() {
  this.setUpdateentitycomponent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.engineinterface.PB_SendSceneMessage.prototype.hasUpdateentitycomponent = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional PB_AttachEntityComponent attachEntityComponent = 7;
 * @return {?proto.engineinterface.PB_AttachEntityComponent}
 */
proto.engineinterface.PB_SendSceneMessage.prototype.getAttachentitycomponent = function() {
  return /** @type{?proto.engineinterface.PB_AttachEntityComponent} */ (
    jspb.Message.getWrapperField(this, proto.engineinterface.PB_AttachEntityComponent, 7));
};


/** @param {?proto.engineinterface.PB_AttachEntityComponent|undefined} value */
proto.engineinterface.PB_SendSceneMessage.prototype.setAttachentitycomponent = function(value) {
  jspb.Message.setOneofWrapperField(this, 7, proto.engineinterface.PB_SendSceneMessage.oneofGroups_[0], value);
};


proto.engineinterface.PB_SendSceneMessage.prototype.clearAttachentitycomponent = function() {
  this.setAttachentitycomponent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.engineinterface.PB_SendSceneMessage.prototype.hasAttachentitycomponent = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional PB_ComponentCreated componentCreated = 8;
 * @return {?proto.engineinterface.PB_ComponentCreated}
 */
proto.engineinterface.PB_SendSceneMessage.prototype.getComponentcreated = function() {
  return /** @type{?proto.engineinterface.PB_ComponentCreated} */ (
    jspb.Message.getWrapperField(this, proto.engineinterface.PB_ComponentCreated, 8));
};


/** @param {?proto.engineinterface.PB_ComponentCreated|undefined} value */
proto.engineinterface.PB_SendSceneMessage.prototype.setComponentcreated = function(value) {
  jspb.Message.setOneofWrapperField(this, 8, proto.engineinterface.PB_SendSceneMessage.oneofGroups_[0], value);
};


proto.engineinterface.PB_SendSceneMessage.prototype.clearComponentcreated = function() {
  this.setComponentcreated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.engineinterface.PB_SendSceneMessage.prototype.hasComponentcreated = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional PB_ComponentDisposed componentDisposed = 9;
 * @return {?proto.engineinterface.PB_ComponentDisposed}
 */
proto.engineinterface.PB_SendSceneMessage.prototype.getComponentdisposed = function() {
  return /** @type{?proto.engineinterface.PB_ComponentDisposed} */ (
    jspb.Message.getWrapperField(this, proto.engineinterface.PB_ComponentDisposed, 9));
};


/** @param {?proto.engineinterface.PB_ComponentDisposed|undefined} value */
proto.engineinterface.PB_SendSceneMessage.prototype.setComponentdisposed = function(value) {
  jspb.Message.setOneofWrapperField(this, 9, proto.engineinterface.PB_SendSceneMessage.oneofGroups_[0], value);
};


proto.engineinterface.PB_SendSceneMessage.prototype.clearComponentdisposed = function() {
  this.setComponentdisposed(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.engineinterface.PB_SendSceneMessage.prototype.hasComponentdisposed = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional PB_ComponentRemoved componentRemoved = 10;
 * @return {?proto.engineinterface.PB_ComponentRemoved}
 */
proto.engineinterface.PB_SendSceneMessage.prototype.getComponentremoved = function() {
  return /** @type{?proto.engineinterface.PB_ComponentRemoved} */ (
    jspb.Message.getWrapperField(this, proto.engineinterface.PB_ComponentRemoved, 10));
};


/** @param {?proto.engineinterface.PB_ComponentRemoved|undefined} value */
proto.engineinterface.PB_SendSceneMessage.prototype.setComponentremoved = function(value) {
  jspb.Message.setOneofWrapperField(this, 10, proto.engineinterface.PB_SendSceneMessage.oneofGroups_[0], value);
};


proto.engineinterface.PB_SendSceneMessage.prototype.clearComponentremoved = function() {
  this.setComponentremoved(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.engineinterface.PB_SendSceneMessage.prototype.hasComponentremoved = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional PB_ComponentUpdated componentUpdated = 11;
 * @return {?proto.engineinterface.PB_ComponentUpdated}
 */
proto.engineinterface.PB_SendSceneMessage.prototype.getComponentupdated = function() {
  return /** @type{?proto.engineinterface.PB_ComponentUpdated} */ (
    jspb.Message.getWrapperField(this, proto.engineinterface.PB_ComponentUpdated, 11));
};


/** @param {?proto.engineinterface.PB_ComponentUpdated|undefined} value */
proto.engineinterface.PB_SendSceneMessage.prototype.setComponentupdated = function(value) {
  jspb.Message.setOneofWrapperField(this, 11, proto.engineinterface.PB_SendSceneMessage.oneofGroups_[0], value);
};


proto.engineinterface.PB_SendSceneMessage.prototype.clearComponentupdated = function() {
  this.setComponentupdated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.engineinterface.PB_SendSceneMessage.prototype.hasComponentupdated = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional PB_Query query = 12;
 * @return {?proto.engineinterface.PB_Query}
 */
proto.engineinterface.PB_SendSceneMessage.prototype.getQuery = function() {
  return /** @type{?proto.engineinterface.PB_Query} */ (
    jspb.Message.getWrapperField(this, proto.engineinterface.PB_Query, 12));
};


/** @param {?proto.engineinterface.PB_Query|undefined} value */
proto.engineinterface.PB_SendSceneMessage.prototype.setQuery = function(value) {
  jspb.Message.setOneofWrapperField(this, 12, proto.engineinterface.PB_SendSceneMessage.oneofGroups_[0], value);
};


proto.engineinterface.PB_SendSceneMessage.prototype.clearQuery = function() {
  this.setQuery(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.engineinterface.PB_SendSceneMessage.prototype.hasQuery = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional google.protobuf.Empty sceneStarted = 13;
 * @return {?proto.google.protobuf.Empty}
 */
proto.engineinterface.PB_SendSceneMessage.prototype.getScenestarted = function() {
  return /** @type{?proto.google.protobuf.Empty} */ (
    jspb.Message.getWrapperField(this, google_protobuf_empty_pb.Empty, 13));
};


/** @param {?proto.google.protobuf.Empty|undefined} value */
proto.engineinterface.PB_SendSceneMessage.prototype.setScenestarted = function(value) {
  jspb.Message.setOneofWrapperField(this, 13, proto.engineinterface.PB_SendSceneMessage.oneofGroups_[0], value);
};


proto.engineinterface.PB_SendSceneMessage.prototype.clearScenestarted = function() {
  this.setScenestarted(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.engineinterface.PB_SendSceneMessage.prototype.hasScenestarted = function() {
  return jspb.Message.getField(this, 13) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.engineinterface.PB_SetPosition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.engineinterface.PB_SetPosition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.engineinterface.PB_SetPosition.displayName = 'proto.engineinterface.PB_SetPosition';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.engineinterface.PB_SetPosition.prototype.toObject = function(opt_includeInstance) {
  return proto.engineinterface.PB_SetPosition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.engineinterface.PB_SetPosition} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.PB_SetPosition.toObject = function(includeInstance, msg) {
  var f, obj = {
    x: +jspb.Message.getFieldWithDefault(msg, 1, 0.0),
    y: +jspb.Message.getFieldWithDefault(msg, 2, 0.0),
    z: +jspb.Message.getFieldWithDefault(msg, 3, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.engineinterface.PB_SetPosition}
 */
proto.engineinterface.PB_SetPosition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.engineinterface.PB_SetPosition;
  return proto.engineinterface.PB_SetPosition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.engineinterface.PB_SetPosition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.engineinterface.PB_SetPosition}
 */
proto.engineinterface.PB_SetPosition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setX(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setY(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setZ(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.engineinterface.PB_SetPosition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.engineinterface.PB_SetPosition.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.engineinterface.PB_SetPosition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.PB_SetPosition.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getX();
  if (f !== 0.0) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = message.getY();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = message.getZ();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
};


/**
 * optional float x = 1;
 * @return {number}
 */
proto.engineinterface.PB_SetPosition.prototype.getX = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.engineinterface.PB_SetPosition.prototype.setX = function(value) {
  jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional float y = 2;
 * @return {number}
 */
proto.engineinterface.PB_SetPosition.prototype.getY = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.engineinterface.PB_SetPosition.prototype.setY = function(value) {
  jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional float z = 3;
 * @return {number}
 */
proto.engineinterface.PB_SetPosition.prototype.getZ = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.engineinterface.PB_SetPosition.prototype.setZ = function(value) {
  jspb.Message.setProto3FloatField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.engineinterface.PB_ContentMapping = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.engineinterface.PB_ContentMapping, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.engineinterface.PB_ContentMapping.displayName = 'proto.engineinterface.PB_ContentMapping';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.engineinterface.PB_ContentMapping.prototype.toObject = function(opt_includeInstance) {
  return proto.engineinterface.PB_ContentMapping.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.engineinterface.PB_ContentMapping} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.PB_ContentMapping.toObject = function(includeInstance, msg) {
  var f, obj = {
    file: jspb.Message.getFieldWithDefault(msg, 1, ""),
    hash: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.engineinterface.PB_ContentMapping}
 */
proto.engineinterface.PB_ContentMapping.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.engineinterface.PB_ContentMapping;
  return proto.engineinterface.PB_ContentMapping.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.engineinterface.PB_ContentMapping} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.engineinterface.PB_ContentMapping}
 */
proto.engineinterface.PB_ContentMapping.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFile(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHash(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.engineinterface.PB_ContentMapping.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.engineinterface.PB_ContentMapping.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.engineinterface.PB_ContentMapping} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.PB_ContentMapping.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFile();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getHash();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string file = 1;
 * @return {string}
 */
proto.engineinterface.PB_ContentMapping.prototype.getFile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.engineinterface.PB_ContentMapping.prototype.setFile = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string hash = 2;
 * @return {string}
 */
proto.engineinterface.PB_ContentMapping.prototype.getHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.engineinterface.PB_ContentMapping.prototype.setHash = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.engineinterface.PB_Position = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.engineinterface.PB_Position, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.engineinterface.PB_Position.displayName = 'proto.engineinterface.PB_Position';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.engineinterface.PB_Position.prototype.toObject = function(opt_includeInstance) {
  return proto.engineinterface.PB_Position.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.engineinterface.PB_Position} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.PB_Position.toObject = function(includeInstance, msg) {
  var f, obj = {
    x: +jspb.Message.getFieldWithDefault(msg, 1, 0.0),
    y: +jspb.Message.getFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.engineinterface.PB_Position}
 */
proto.engineinterface.PB_Position.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.engineinterface.PB_Position;
  return proto.engineinterface.PB_Position.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.engineinterface.PB_Position} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.engineinterface.PB_Position}
 */
proto.engineinterface.PB_Position.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setX(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setY(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.engineinterface.PB_Position.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.engineinterface.PB_Position.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.engineinterface.PB_Position} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.PB_Position.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getX();
  if (f !== 0.0) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = message.getY();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
};


/**
 * optional float x = 1;
 * @return {number}
 */
proto.engineinterface.PB_Position.prototype.getX = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.engineinterface.PB_Position.prototype.setX = function(value) {
  jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional float y = 2;
 * @return {number}
 */
proto.engineinterface.PB_Position.prototype.getY = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.engineinterface.PB_Position.prototype.setY = function(value) {
  jspb.Message.setProto3FloatField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.engineinterface.PB_LoadParcelScenes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.engineinterface.PB_LoadParcelScenes.repeatedFields_, null);
};
goog.inherits(proto.engineinterface.PB_LoadParcelScenes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.engineinterface.PB_LoadParcelScenes.displayName = 'proto.engineinterface.PB_LoadParcelScenes';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.engineinterface.PB_LoadParcelScenes.repeatedFields_ = [3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.engineinterface.PB_LoadParcelScenes.prototype.toObject = function(opt_includeInstance) {
  return proto.engineinterface.PB_LoadParcelScenes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.engineinterface.PB_LoadParcelScenes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.PB_LoadParcelScenes.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    baseposition: (f = msg.getBaseposition()) && proto.engineinterface.PB_Position.toObject(includeInstance, f),
    parcelsList: jspb.Message.toObjectList(msg.getParcelsList(),
    proto.engineinterface.PB_Position.toObject, includeInstance),
    contentsList: jspb.Message.toObjectList(msg.getContentsList(),
    proto.engineinterface.PB_ContentMapping.toObject, includeInstance),
    baseurl: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.engineinterface.PB_LoadParcelScenes}
 */
proto.engineinterface.PB_LoadParcelScenes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.engineinterface.PB_LoadParcelScenes;
  return proto.engineinterface.PB_LoadParcelScenes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.engineinterface.PB_LoadParcelScenes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.engineinterface.PB_LoadParcelScenes}
 */
proto.engineinterface.PB_LoadParcelScenes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.engineinterface.PB_Position;
      reader.readMessage(value,proto.engineinterface.PB_Position.deserializeBinaryFromReader);
      msg.setBaseposition(value);
      break;
    case 3:
      var value = new proto.engineinterface.PB_Position;
      reader.readMessage(value,proto.engineinterface.PB_Position.deserializeBinaryFromReader);
      msg.addParcels(value);
      break;
    case 4:
      var value = new proto.engineinterface.PB_ContentMapping;
      reader.readMessage(value,proto.engineinterface.PB_ContentMapping.deserializeBinaryFromReader);
      msg.addContents(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setBaseurl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.engineinterface.PB_LoadParcelScenes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.engineinterface.PB_LoadParcelScenes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.engineinterface.PB_LoadParcelScenes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.PB_LoadParcelScenes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBaseposition();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.engineinterface.PB_Position.serializeBinaryToWriter
    );
  }
  f = message.getParcelsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.engineinterface.PB_Position.serializeBinaryToWriter
    );
  }
  f = message.getContentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.engineinterface.PB_ContentMapping.serializeBinaryToWriter
    );
  }
  f = message.getBaseurl();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.engineinterface.PB_LoadParcelScenes.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.engineinterface.PB_LoadParcelScenes.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional PB_Position basePosition = 2;
 * @return {?proto.engineinterface.PB_Position}
 */
proto.engineinterface.PB_LoadParcelScenes.prototype.getBaseposition = function() {
  return /** @type{?proto.engineinterface.PB_Position} */ (
    jspb.Message.getWrapperField(this, proto.engineinterface.PB_Position, 2));
};


/** @param {?proto.engineinterface.PB_Position|undefined} value */
proto.engineinterface.PB_LoadParcelScenes.prototype.setBaseposition = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.engineinterface.PB_LoadParcelScenes.prototype.clearBaseposition = function() {
  this.setBaseposition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.engineinterface.PB_LoadParcelScenes.prototype.hasBaseposition = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated PB_Position parcels = 3;
 * @return {!Array<!proto.engineinterface.PB_Position>}
 */
proto.engineinterface.PB_LoadParcelScenes.prototype.getParcelsList = function() {
  return /** @type{!Array<!proto.engineinterface.PB_Position>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.engineinterface.PB_Position, 3));
};


/** @param {!Array<!proto.engineinterface.PB_Position>} value */
proto.engineinterface.PB_LoadParcelScenes.prototype.setParcelsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.engineinterface.PB_Position=} opt_value
 * @param {number=} opt_index
 * @return {!proto.engineinterface.PB_Position}
 */
proto.engineinterface.PB_LoadParcelScenes.prototype.addParcels = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.engineinterface.PB_Position, opt_index);
};


proto.engineinterface.PB_LoadParcelScenes.prototype.clearParcelsList = function() {
  this.setParcelsList([]);
};


/**
 * repeated PB_ContentMapping contents = 4;
 * @return {!Array<!proto.engineinterface.PB_ContentMapping>}
 */
proto.engineinterface.PB_LoadParcelScenes.prototype.getContentsList = function() {
  return /** @type{!Array<!proto.engineinterface.PB_ContentMapping>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.engineinterface.PB_ContentMapping, 4));
};


/** @param {!Array<!proto.engineinterface.PB_ContentMapping>} value */
proto.engineinterface.PB_LoadParcelScenes.prototype.setContentsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.engineinterface.PB_ContentMapping=} opt_value
 * @param {number=} opt_index
 * @return {!proto.engineinterface.PB_ContentMapping}
 */
proto.engineinterface.PB_LoadParcelScenes.prototype.addContents = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.engineinterface.PB_ContentMapping, opt_index);
};


proto.engineinterface.PB_LoadParcelScenes.prototype.clearContentsList = function() {
  this.setContentsList([]);
};


/**
 * optional string baseUrl = 5;
 * @return {string}
 */
proto.engineinterface.PB_LoadParcelScenes.prototype.getBaseurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.engineinterface.PB_LoadParcelScenes.prototype.setBaseurl = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.engineinterface.PB_CreateUIScene = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.engineinterface.PB_CreateUIScene, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.engineinterface.PB_CreateUIScene.displayName = 'proto.engineinterface.PB_CreateUIScene';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.engineinterface.PB_CreateUIScene.prototype.toObject = function(opt_includeInstance) {
  return proto.engineinterface.PB_CreateUIScene.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.engineinterface.PB_CreateUIScene} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.PB_CreateUIScene.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    baseurl: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.engineinterface.PB_CreateUIScene}
 */
proto.engineinterface.PB_CreateUIScene.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.engineinterface.PB_CreateUIScene;
  return proto.engineinterface.PB_CreateUIScene.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.engineinterface.PB_CreateUIScene} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.engineinterface.PB_CreateUIScene}
 */
proto.engineinterface.PB_CreateUIScene.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBaseurl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.engineinterface.PB_CreateUIScene.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.engineinterface.PB_CreateUIScene.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.engineinterface.PB_CreateUIScene} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.PB_CreateUIScene.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBaseurl();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.engineinterface.PB_CreateUIScene.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.engineinterface.PB_CreateUIScene.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string baseUrl = 2;
 * @return {string}
 */
proto.engineinterface.PB_CreateUIScene.prototype.getBaseurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.engineinterface.PB_CreateUIScene.prototype.setBaseurl = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.engineinterface.PB_UnloadScene = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.engineinterface.PB_UnloadScene, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.engineinterface.PB_UnloadScene.displayName = 'proto.engineinterface.PB_UnloadScene';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.engineinterface.PB_UnloadScene.prototype.toObject = function(opt_includeInstance) {
  return proto.engineinterface.PB_UnloadScene.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.engineinterface.PB_UnloadScene} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.PB_UnloadScene.toObject = function(includeInstance, msg) {
  var f, obj = {
    sceneid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.engineinterface.PB_UnloadScene}
 */
proto.engineinterface.PB_UnloadScene.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.engineinterface.PB_UnloadScene;
  return proto.engineinterface.PB_UnloadScene.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.engineinterface.PB_UnloadScene} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.engineinterface.PB_UnloadScene}
 */
proto.engineinterface.PB_UnloadScene.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSceneid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.engineinterface.PB_UnloadScene.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.engineinterface.PB_UnloadScene.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.engineinterface.PB_UnloadScene} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.PB_UnloadScene.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSceneid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string sceneId = 1;
 * @return {string}
 */
proto.engineinterface.PB_UnloadScene.prototype.getSceneid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.engineinterface.PB_UnloadScene.prototype.setSceneid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.engineinterface.PB_DclMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.engineinterface.PB_DclMessage.oneofGroups_);
};
goog.inherits(proto.engineinterface.PB_DclMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.engineinterface.PB_DclMessage.displayName = 'proto.engineinterface.PB_DclMessage';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.engineinterface.PB_DclMessage.oneofGroups_ = [[1,2,3,4,5,6,7,8,9]];

/**
 * @enum {number}
 */
proto.engineinterface.PB_DclMessage.MessageCase = {
  MESSAGE_NOT_SET: 0,
  SETDEBUG: 1,
  SETSCENEDEBUGPANEL: 2,
  SETENGINEDEBUGPANEL: 3,
  SENDSCENEMESSAGE: 4,
  LOADPARCELSCENES: 5,
  UNLOADSCENE: 6,
  SETPOSITION: 7,
  RESET: 8,
  CREATEUISCENE: 9
};

/**
 * @return {proto.engineinterface.PB_DclMessage.MessageCase}
 */
proto.engineinterface.PB_DclMessage.prototype.getMessageCase = function() {
  return /** @type {proto.engineinterface.PB_DclMessage.MessageCase} */(jspb.Message.computeOneofCase(this, proto.engineinterface.PB_DclMessage.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.engineinterface.PB_DclMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.engineinterface.PB_DclMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.engineinterface.PB_DclMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.PB_DclMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    setdebug: (f = msg.getSetdebug()) && google_protobuf_empty_pb.Empty.toObject(includeInstance, f),
    setscenedebugpanel: (f = msg.getSetscenedebugpanel()) && google_protobuf_empty_pb.Empty.toObject(includeInstance, f),
    setenginedebugpanel: (f = msg.getSetenginedebugpanel()) && google_protobuf_empty_pb.Empty.toObject(includeInstance, f),
    sendscenemessage: (f = msg.getSendscenemessage()) && proto.engineinterface.PB_SendSceneMessage.toObject(includeInstance, f),
    loadparcelscenes: (f = msg.getLoadparcelscenes()) && proto.engineinterface.PB_LoadParcelScenes.toObject(includeInstance, f),
    unloadscene: (f = msg.getUnloadscene()) && proto.engineinterface.PB_UnloadScene.toObject(includeInstance, f),
    setposition: (f = msg.getSetposition()) && proto.engineinterface.PB_SetPosition.toObject(includeInstance, f),
    reset: (f = msg.getReset()) && google_protobuf_empty_pb.Empty.toObject(includeInstance, f),
    createuiscene: (f = msg.getCreateuiscene()) && proto.engineinterface.PB_CreateUIScene.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.engineinterface.PB_DclMessage}
 */
proto.engineinterface.PB_DclMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.engineinterface.PB_DclMessage;
  return proto.engineinterface.PB_DclMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.engineinterface.PB_DclMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.engineinterface.PB_DclMessage}
 */
proto.engineinterface.PB_DclMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_empty_pb.Empty;
      reader.readMessage(value,google_protobuf_empty_pb.Empty.deserializeBinaryFromReader);
      msg.setSetdebug(value);
      break;
    case 2:
      var value = new google_protobuf_empty_pb.Empty;
      reader.readMessage(value,google_protobuf_empty_pb.Empty.deserializeBinaryFromReader);
      msg.setSetscenedebugpanel(value);
      break;
    case 3:
      var value = new google_protobuf_empty_pb.Empty;
      reader.readMessage(value,google_protobuf_empty_pb.Empty.deserializeBinaryFromReader);
      msg.setSetenginedebugpanel(value);
      break;
    case 4:
      var value = new proto.engineinterface.PB_SendSceneMessage;
      reader.readMessage(value,proto.engineinterface.PB_SendSceneMessage.deserializeBinaryFromReader);
      msg.setSendscenemessage(value);
      break;
    case 5:
      var value = new proto.engineinterface.PB_LoadParcelScenes;
      reader.readMessage(value,proto.engineinterface.PB_LoadParcelScenes.deserializeBinaryFromReader);
      msg.setLoadparcelscenes(value);
      break;
    case 6:
      var value = new proto.engineinterface.PB_UnloadScene;
      reader.readMessage(value,proto.engineinterface.PB_UnloadScene.deserializeBinaryFromReader);
      msg.setUnloadscene(value);
      break;
    case 7:
      var value = new proto.engineinterface.PB_SetPosition;
      reader.readMessage(value,proto.engineinterface.PB_SetPosition.deserializeBinaryFromReader);
      msg.setSetposition(value);
      break;
    case 8:
      var value = new google_protobuf_empty_pb.Empty;
      reader.readMessage(value,google_protobuf_empty_pb.Empty.deserializeBinaryFromReader);
      msg.setReset(value);
      break;
    case 9:
      var value = new proto.engineinterface.PB_CreateUIScene;
      reader.readMessage(value,proto.engineinterface.PB_CreateUIScene.deserializeBinaryFromReader);
      msg.setCreateuiscene(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.engineinterface.PB_DclMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.engineinterface.PB_DclMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.engineinterface.PB_DclMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.PB_DclMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSetdebug();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_empty_pb.Empty.serializeBinaryToWriter
    );
  }
  f = message.getSetscenedebugpanel();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_empty_pb.Empty.serializeBinaryToWriter
    );
  }
  f = message.getSetenginedebugpanel();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_empty_pb.Empty.serializeBinaryToWriter
    );
  }
  f = message.getSendscenemessage();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.engineinterface.PB_SendSceneMessage.serializeBinaryToWriter
    );
  }
  f = message.getLoadparcelscenes();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.engineinterface.PB_LoadParcelScenes.serializeBinaryToWriter
    );
  }
  f = message.getUnloadscene();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.engineinterface.PB_UnloadScene.serializeBinaryToWriter
    );
  }
  f = message.getSetposition();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.engineinterface.PB_SetPosition.serializeBinaryToWriter
    );
  }
  f = message.getReset();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_empty_pb.Empty.serializeBinaryToWriter
    );
  }
  f = message.getCreateuiscene();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.engineinterface.PB_CreateUIScene.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Empty setDebug = 1;
 * @return {?proto.google.protobuf.Empty}
 */
proto.engineinterface.PB_DclMessage.prototype.getSetdebug = function() {
  return /** @type{?proto.google.protobuf.Empty} */ (
    jspb.Message.getWrapperField(this, google_protobuf_empty_pb.Empty, 1));
};


/** @param {?proto.google.protobuf.Empty|undefined} value */
proto.engineinterface.PB_DclMessage.prototype.setSetdebug = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.engineinterface.PB_DclMessage.oneofGroups_[0], value);
};


proto.engineinterface.PB_DclMessage.prototype.clearSetdebug = function() {
  this.setSetdebug(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.engineinterface.PB_DclMessage.prototype.hasSetdebug = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Empty setSceneDebugPanel = 2;
 * @return {?proto.google.protobuf.Empty}
 */
proto.engineinterface.PB_DclMessage.prototype.getSetscenedebugpanel = function() {
  return /** @type{?proto.google.protobuf.Empty} */ (
    jspb.Message.getWrapperField(this, google_protobuf_empty_pb.Empty, 2));
};


/** @param {?proto.google.protobuf.Empty|undefined} value */
proto.engineinterface.PB_DclMessage.prototype.setSetscenedebugpanel = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.engineinterface.PB_DclMessage.oneofGroups_[0], value);
};


proto.engineinterface.PB_DclMessage.prototype.clearSetscenedebugpanel = function() {
  this.setSetscenedebugpanel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.engineinterface.PB_DclMessage.prototype.hasSetscenedebugpanel = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Empty setEngineDebugPanel = 3;
 * @return {?proto.google.protobuf.Empty}
 */
proto.engineinterface.PB_DclMessage.prototype.getSetenginedebugpanel = function() {
  return /** @type{?proto.google.protobuf.Empty} */ (
    jspb.Message.getWrapperField(this, google_protobuf_empty_pb.Empty, 3));
};


/** @param {?proto.google.protobuf.Empty|undefined} value */
proto.engineinterface.PB_DclMessage.prototype.setSetenginedebugpanel = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.engineinterface.PB_DclMessage.oneofGroups_[0], value);
};


proto.engineinterface.PB_DclMessage.prototype.clearSetenginedebugpanel = function() {
  this.setSetenginedebugpanel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.engineinterface.PB_DclMessage.prototype.hasSetenginedebugpanel = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional PB_SendSceneMessage sendSceneMessage = 4;
 * @return {?proto.engineinterface.PB_SendSceneMessage}
 */
proto.engineinterface.PB_DclMessage.prototype.getSendscenemessage = function() {
  return /** @type{?proto.engineinterface.PB_SendSceneMessage} */ (
    jspb.Message.getWrapperField(this, proto.engineinterface.PB_SendSceneMessage, 4));
};


/** @param {?proto.engineinterface.PB_SendSceneMessage|undefined} value */
proto.engineinterface.PB_DclMessage.prototype.setSendscenemessage = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.engineinterface.PB_DclMessage.oneofGroups_[0], value);
};


proto.engineinterface.PB_DclMessage.prototype.clearSendscenemessage = function() {
  this.setSendscenemessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.engineinterface.PB_DclMessage.prototype.hasSendscenemessage = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional PB_LoadParcelScenes loadParcelScenes = 5;
 * @return {?proto.engineinterface.PB_LoadParcelScenes}
 */
proto.engineinterface.PB_DclMessage.prototype.getLoadparcelscenes = function() {
  return /** @type{?proto.engineinterface.PB_LoadParcelScenes} */ (
    jspb.Message.getWrapperField(this, proto.engineinterface.PB_LoadParcelScenes, 5));
};


/** @param {?proto.engineinterface.PB_LoadParcelScenes|undefined} value */
proto.engineinterface.PB_DclMessage.prototype.setLoadparcelscenes = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.engineinterface.PB_DclMessage.oneofGroups_[0], value);
};


proto.engineinterface.PB_DclMessage.prototype.clearLoadparcelscenes = function() {
  this.setLoadparcelscenes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.engineinterface.PB_DclMessage.prototype.hasLoadparcelscenes = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional PB_UnloadScene unloadScene = 6;
 * @return {?proto.engineinterface.PB_UnloadScene}
 */
proto.engineinterface.PB_DclMessage.prototype.getUnloadscene = function() {
  return /** @type{?proto.engineinterface.PB_UnloadScene} */ (
    jspb.Message.getWrapperField(this, proto.engineinterface.PB_UnloadScene, 6));
};


/** @param {?proto.engineinterface.PB_UnloadScene|undefined} value */
proto.engineinterface.PB_DclMessage.prototype.setUnloadscene = function(value) {
  jspb.Message.setOneofWrapperField(this, 6, proto.engineinterface.PB_DclMessage.oneofGroups_[0], value);
};


proto.engineinterface.PB_DclMessage.prototype.clearUnloadscene = function() {
  this.setUnloadscene(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.engineinterface.PB_DclMessage.prototype.hasUnloadscene = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional PB_SetPosition setPosition = 7;
 * @return {?proto.engineinterface.PB_SetPosition}
 */
proto.engineinterface.PB_DclMessage.prototype.getSetposition = function() {
  return /** @type{?proto.engineinterface.PB_SetPosition} */ (
    jspb.Message.getWrapperField(this, proto.engineinterface.PB_SetPosition, 7));
};


/** @param {?proto.engineinterface.PB_SetPosition|undefined} value */
proto.engineinterface.PB_DclMessage.prototype.setSetposition = function(value) {
  jspb.Message.setOneofWrapperField(this, 7, proto.engineinterface.PB_DclMessage.oneofGroups_[0], value);
};


proto.engineinterface.PB_DclMessage.prototype.clearSetposition = function() {
  this.setSetposition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.engineinterface.PB_DclMessage.prototype.hasSetposition = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional google.protobuf.Empty reset = 8;
 * @return {?proto.google.protobuf.Empty}
 */
proto.engineinterface.PB_DclMessage.prototype.getReset = function() {
  return /** @type{?proto.google.protobuf.Empty} */ (
    jspb.Message.getWrapperField(this, google_protobuf_empty_pb.Empty, 8));
};


/** @param {?proto.google.protobuf.Empty|undefined} value */
proto.engineinterface.PB_DclMessage.prototype.setReset = function(value) {
  jspb.Message.setOneofWrapperField(this, 8, proto.engineinterface.PB_DclMessage.oneofGroups_[0], value);
};


proto.engineinterface.PB_DclMessage.prototype.clearReset = function() {
  this.setReset(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.engineinterface.PB_DclMessage.prototype.hasReset = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional PB_CreateUIScene createUIScene = 9;
 * @return {?proto.engineinterface.PB_CreateUIScene}
 */
proto.engineinterface.PB_DclMessage.prototype.getCreateuiscene = function() {
  return /** @type{?proto.engineinterface.PB_CreateUIScene} */ (
    jspb.Message.getWrapperField(this, proto.engineinterface.PB_CreateUIScene, 9));
};


/** @param {?proto.engineinterface.PB_CreateUIScene|undefined} value */
proto.engineinterface.PB_DclMessage.prototype.setCreateuiscene = function(value) {
  jspb.Message.setOneofWrapperField(this, 9, proto.engineinterface.PB_DclMessage.oneofGroups_[0], value);
};


proto.engineinterface.PB_DclMessage.prototype.clearCreateuiscene = function() {
  this.setCreateuiscene(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.engineinterface.PB_DclMessage.prototype.hasCreateuiscene = function() {
  return jspb.Message.getField(this, 9) != null;
};


goog.object.extend(exports, proto.engineinterface);
