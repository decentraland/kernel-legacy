/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.exportSymbol('proto.engineinterface.AttachEntityComponent', null, global);
goog.exportSymbol('proto.engineinterface.Color', null, global);
goog.exportSymbol('proto.engineinterface.ComponentCreated', null, global);
goog.exportSymbol('proto.engineinterface.ComponentDisposed', null, global);
goog.exportSymbol('proto.engineinterface.ComponentRemoved', null, global);
goog.exportSymbol('proto.engineinterface.ComponentUpdated', null, global);
goog.exportSymbol('proto.engineinterface.ContentMapping', null, global);
goog.exportSymbol('proto.engineinterface.CreateEntity', null, global);
goog.exportSymbol('proto.engineinterface.CreateUIScene', null, global);
goog.exportSymbol('proto.engineinterface.DclMessage', null, global);
goog.exportSymbol('proto.engineinterface.LoadParcelScenes', null, global);
goog.exportSymbol('proto.engineinterface.Position', null, global);
goog.exportSymbol('proto.engineinterface.RemoveEntity', null, global);
goog.exportSymbol('proto.engineinterface.SendSceneMessage', null, global);
goog.exportSymbol('proto.engineinterface.SetEntityParent', null, global);
goog.exportSymbol('proto.engineinterface.SetPosition', null, global);
goog.exportSymbol('proto.engineinterface.TextShapeModel', null, global);
goog.exportSymbol('proto.engineinterface.UnloadScene', null, global);
goog.exportSymbol('proto.engineinterface.UpdateEntityComponent', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.engineinterface.CreateEntity = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.engineinterface.CreateEntity, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.engineinterface.CreateEntity.displayName = 'proto.engineinterface.CreateEntity';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.engineinterface.CreateEntity.prototype.toObject = function(opt_includeInstance) {
  return proto.engineinterface.CreateEntity.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.engineinterface.CreateEntity} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.CreateEntity.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.engineinterface.CreateEntity}
 */
proto.engineinterface.CreateEntity.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.engineinterface.CreateEntity;
  return proto.engineinterface.CreateEntity.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.engineinterface.CreateEntity} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.engineinterface.CreateEntity}
 */
proto.engineinterface.CreateEntity.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.engineinterface.CreateEntity.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.engineinterface.CreateEntity.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.engineinterface.CreateEntity} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.CreateEntity.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.engineinterface.CreateEntity.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.engineinterface.CreateEntity.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.engineinterface.RemoveEntity = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.engineinterface.RemoveEntity, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.engineinterface.RemoveEntity.displayName = 'proto.engineinterface.RemoveEntity';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.engineinterface.RemoveEntity.prototype.toObject = function(opt_includeInstance) {
  return proto.engineinterface.RemoveEntity.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.engineinterface.RemoveEntity} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.RemoveEntity.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.engineinterface.RemoveEntity}
 */
proto.engineinterface.RemoveEntity.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.engineinterface.RemoveEntity;
  return proto.engineinterface.RemoveEntity.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.engineinterface.RemoveEntity} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.engineinterface.RemoveEntity}
 */
proto.engineinterface.RemoveEntity.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.engineinterface.RemoveEntity.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.engineinterface.RemoveEntity.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.engineinterface.RemoveEntity} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.RemoveEntity.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.engineinterface.RemoveEntity.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.engineinterface.RemoveEntity.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.engineinterface.SetEntityParent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.engineinterface.SetEntityParent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.engineinterface.SetEntityParent.displayName = 'proto.engineinterface.SetEntityParent';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.engineinterface.SetEntityParent.prototype.toObject = function(opt_includeInstance) {
  return proto.engineinterface.SetEntityParent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.engineinterface.SetEntityParent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.SetEntityParent.toObject = function(includeInstance, msg) {
  var f, obj = {
    entityid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    parentid: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.engineinterface.SetEntityParent}
 */
proto.engineinterface.SetEntityParent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.engineinterface.SetEntityParent;
  return proto.engineinterface.SetEntityParent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.engineinterface.SetEntityParent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.engineinterface.SetEntityParent}
 */
proto.engineinterface.SetEntityParent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEntityid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setParentid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.engineinterface.SetEntityParent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.engineinterface.SetEntityParent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.engineinterface.SetEntityParent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.SetEntityParent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntityid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getParentid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string entityId = 1;
 * @return {string}
 */
proto.engineinterface.SetEntityParent.prototype.getEntityid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.engineinterface.SetEntityParent.prototype.setEntityid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string parentId = 2;
 * @return {string}
 */
proto.engineinterface.SetEntityParent.prototype.getParentid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.engineinterface.SetEntityParent.prototype.setParentid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.engineinterface.ComponentRemoved = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.engineinterface.ComponentRemoved, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.engineinterface.ComponentRemoved.displayName = 'proto.engineinterface.ComponentRemoved';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.engineinterface.ComponentRemoved.prototype.toObject = function(opt_includeInstance) {
  return proto.engineinterface.ComponentRemoved.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.engineinterface.ComponentRemoved} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.ComponentRemoved.toObject = function(includeInstance, msg) {
  var f, obj = {
    entityid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.engineinterface.ComponentRemoved}
 */
proto.engineinterface.ComponentRemoved.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.engineinterface.ComponentRemoved;
  return proto.engineinterface.ComponentRemoved.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.engineinterface.ComponentRemoved} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.engineinterface.ComponentRemoved}
 */
proto.engineinterface.ComponentRemoved.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEntityid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.engineinterface.ComponentRemoved.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.engineinterface.ComponentRemoved.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.engineinterface.ComponentRemoved} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.ComponentRemoved.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntityid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string entityId = 1;
 * @return {string}
 */
proto.engineinterface.ComponentRemoved.prototype.getEntityid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.engineinterface.ComponentRemoved.prototype.setEntityid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.engineinterface.ComponentRemoved.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.engineinterface.ComponentRemoved.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.engineinterface.Color = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.engineinterface.Color, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.engineinterface.Color.displayName = 'proto.engineinterface.Color';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.engineinterface.Color.prototype.toObject = function(opt_includeInstance) {
  return proto.engineinterface.Color.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.engineinterface.Color} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.Color.toObject = function(includeInstance, msg) {
  var f, obj = {
    r: +jspb.Message.getFieldWithDefault(msg, 1, 0.0),
    g: +jspb.Message.getFieldWithDefault(msg, 2, 0.0),
    b: +jspb.Message.getFieldWithDefault(msg, 3, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.engineinterface.Color}
 */
proto.engineinterface.Color.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.engineinterface.Color;
  return proto.engineinterface.Color.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.engineinterface.Color} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.engineinterface.Color}
 */
proto.engineinterface.Color.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setR(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setG(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setB(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.engineinterface.Color.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.engineinterface.Color.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.engineinterface.Color} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.Color.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getR();
  if (f !== 0.0) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = message.getG();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = message.getB();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
};


/**
 * optional float r = 1;
 * @return {number}
 */
proto.engineinterface.Color.prototype.getR = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.engineinterface.Color.prototype.setR = function(value) {
  jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional float g = 2;
 * @return {number}
 */
proto.engineinterface.Color.prototype.getG = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.engineinterface.Color.prototype.setG = function(value) {
  jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional float b = 3;
 * @return {number}
 */
proto.engineinterface.Color.prototype.getB = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.engineinterface.Color.prototype.setB = function(value) {
  jspb.Message.setProto3FloatField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.engineinterface.TextShapeModel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.engineinterface.TextShapeModel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.engineinterface.TextShapeModel.displayName = 'proto.engineinterface.TextShapeModel';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.engineinterface.TextShapeModel.prototype.toObject = function(opt_includeInstance) {
  return proto.engineinterface.TextShapeModel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.engineinterface.TextShapeModel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.TextShapeModel.toObject = function(includeInstance, msg) {
  var f, obj = {
    billboard: jspb.Message.getFieldWithDefault(msg, 1, false),
    value: jspb.Message.getFieldWithDefault(msg, 2, ""),
    color: (f = msg.getColor()) && proto.engineinterface.Color.toObject(includeInstance, f),
    opacity: +jspb.Message.getFieldWithDefault(msg, 4, 0.0),
    fontsize: +jspb.Message.getFieldWithDefault(msg, 5, 0.0),
    fontautosize: jspb.Message.getFieldWithDefault(msg, 6, false),
    fontweight: jspb.Message.getFieldWithDefault(msg, 7, ""),
    htextalign: jspb.Message.getFieldWithDefault(msg, 8, ""),
    vtextalign: jspb.Message.getFieldWithDefault(msg, 9, ""),
    width: +jspb.Message.getFieldWithDefault(msg, 10, 0.0),
    height: +jspb.Message.getFieldWithDefault(msg, 11, 0.0),
    adaptwidth: jspb.Message.getFieldWithDefault(msg, 12, false),
    adaptheight: jspb.Message.getFieldWithDefault(msg, 13, false),
    paddingtop: +jspb.Message.getFieldWithDefault(msg, 14, 0.0),
    paddingright: +jspb.Message.getFieldWithDefault(msg, 15, 0.0),
    paddingbottom: +jspb.Message.getFieldWithDefault(msg, 16, 0.0),
    paddingleft: +jspb.Message.getFieldWithDefault(msg, 17, 0.0),
    linespacing: +jspb.Message.getFieldWithDefault(msg, 18, 0.0),
    linecount: jspb.Message.getFieldWithDefault(msg, 19, 0),
    textwrapping: jspb.Message.getFieldWithDefault(msg, 20, false),
    shadowblur: +jspb.Message.getFieldWithDefault(msg, 21, 0.0),
    shadowoffsetx: +jspb.Message.getFieldWithDefault(msg, 22, 0.0),
    shadowoffsety: +jspb.Message.getFieldWithDefault(msg, 23, 0.0),
    shadowcolor: (f = msg.getShadowcolor()) && proto.engineinterface.Color.toObject(includeInstance, f),
    outlinewidth: +jspb.Message.getFieldWithDefault(msg, 25, 0.0),
    outlinecolor: (f = msg.getOutlinecolor()) && proto.engineinterface.Color.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.engineinterface.TextShapeModel}
 */
proto.engineinterface.TextShapeModel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.engineinterface.TextShapeModel;
  return proto.engineinterface.TextShapeModel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.engineinterface.TextShapeModel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.engineinterface.TextShapeModel}
 */
proto.engineinterface.TextShapeModel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBillboard(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 3:
      var value = new proto.engineinterface.Color;
      reader.readMessage(value,proto.engineinterface.Color.deserializeBinaryFromReader);
      msg.setColor(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setOpacity(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setFontsize(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFontautosize(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setFontweight(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setHtextalign(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setVtextalign(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setWidth(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setHeight(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAdaptwidth(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAdaptheight(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setPaddingtop(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setPaddingright(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setPaddingbottom(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setPaddingleft(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setLinespacing(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLinecount(value);
      break;
    case 20:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTextwrapping(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setShadowblur(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setShadowoffsetx(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setShadowoffsety(value);
      break;
    case 24:
      var value = new proto.engineinterface.Color;
      reader.readMessage(value,proto.engineinterface.Color.deserializeBinaryFromReader);
      msg.setShadowcolor(value);
      break;
    case 25:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setOutlinewidth(value);
      break;
    case 26:
      var value = new proto.engineinterface.Color;
      reader.readMessage(value,proto.engineinterface.Color.deserializeBinaryFromReader);
      msg.setOutlinecolor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.engineinterface.TextShapeModel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.engineinterface.TextShapeModel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.engineinterface.TextShapeModel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.TextShapeModel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBillboard();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getColor();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.engineinterface.Color.serializeBinaryToWriter
    );
  }
  f = message.getOpacity();
  if (f !== 0.0) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = message.getFontsize();
  if (f !== 0.0) {
    writer.writeFloat(
      5,
      f
    );
  }
  f = message.getFontautosize();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getFontweight();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getHtextalign();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getVtextalign();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getWidth();
  if (f !== 0.0) {
    writer.writeFloat(
      10,
      f
    );
  }
  f = message.getHeight();
  if (f !== 0.0) {
    writer.writeFloat(
      11,
      f
    );
  }
  f = message.getAdaptwidth();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getAdaptheight();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getPaddingtop();
  if (f !== 0.0) {
    writer.writeFloat(
      14,
      f
    );
  }
  f = message.getPaddingright();
  if (f !== 0.0) {
    writer.writeFloat(
      15,
      f
    );
  }
  f = message.getPaddingbottom();
  if (f !== 0.0) {
    writer.writeFloat(
      16,
      f
    );
  }
  f = message.getPaddingleft();
  if (f !== 0.0) {
    writer.writeFloat(
      17,
      f
    );
  }
  f = message.getLinespacing();
  if (f !== 0.0) {
    writer.writeFloat(
      18,
      f
    );
  }
  f = message.getLinecount();
  if (f !== 0) {
    writer.writeInt32(
      19,
      f
    );
  }
  f = message.getTextwrapping();
  if (f) {
    writer.writeBool(
      20,
      f
    );
  }
  f = message.getShadowblur();
  if (f !== 0.0) {
    writer.writeFloat(
      21,
      f
    );
  }
  f = message.getShadowoffsetx();
  if (f !== 0.0) {
    writer.writeFloat(
      22,
      f
    );
  }
  f = message.getShadowoffsety();
  if (f !== 0.0) {
    writer.writeFloat(
      23,
      f
    );
  }
  f = message.getShadowcolor();
  if (f != null) {
    writer.writeMessage(
      24,
      f,
      proto.engineinterface.Color.serializeBinaryToWriter
    );
  }
  f = message.getOutlinewidth();
  if (f !== 0.0) {
    writer.writeFloat(
      25,
      f
    );
  }
  f = message.getOutlinecolor();
  if (f != null) {
    writer.writeMessage(
      26,
      f,
      proto.engineinterface.Color.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool billboard = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.engineinterface.TextShapeModel.prototype.getBillboard = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.engineinterface.TextShapeModel.prototype.setBillboard = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.engineinterface.TextShapeModel.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.engineinterface.TextShapeModel.prototype.setValue = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Color color = 3;
 * @return {?proto.engineinterface.Color}
 */
proto.engineinterface.TextShapeModel.prototype.getColor = function() {
  return /** @type{?proto.engineinterface.Color} */ (
    jspb.Message.getWrapperField(this, proto.engineinterface.Color, 3));
};


/** @param {?proto.engineinterface.Color|undefined} value */
proto.engineinterface.TextShapeModel.prototype.setColor = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.engineinterface.TextShapeModel.prototype.clearColor = function() {
  this.setColor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.engineinterface.TextShapeModel.prototype.hasColor = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional float opacity = 4;
 * @return {number}
 */
proto.engineinterface.TextShapeModel.prototype.getOpacity = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 4, 0.0));
};


/** @param {number} value */
proto.engineinterface.TextShapeModel.prototype.setOpacity = function(value) {
  jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional float fontSize = 5;
 * @return {number}
 */
proto.engineinterface.TextShapeModel.prototype.getFontsize = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 5, 0.0));
};


/** @param {number} value */
proto.engineinterface.TextShapeModel.prototype.setFontsize = function(value) {
  jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional bool fontAutoSize = 6;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.engineinterface.TextShapeModel.prototype.getFontautosize = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 6, false));
};


/** @param {boolean} value */
proto.engineinterface.TextShapeModel.prototype.setFontautosize = function(value) {
  jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional string fontWeight = 7;
 * @return {string}
 */
proto.engineinterface.TextShapeModel.prototype.getFontweight = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.engineinterface.TextShapeModel.prototype.setFontweight = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string hTextAlign = 8;
 * @return {string}
 */
proto.engineinterface.TextShapeModel.prototype.getHtextalign = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.engineinterface.TextShapeModel.prototype.setHtextalign = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string vTextAlign = 9;
 * @return {string}
 */
proto.engineinterface.TextShapeModel.prototype.getVtextalign = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.engineinterface.TextShapeModel.prototype.setVtextalign = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional float width = 10;
 * @return {number}
 */
proto.engineinterface.TextShapeModel.prototype.getWidth = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 10, 0.0));
};


/** @param {number} value */
proto.engineinterface.TextShapeModel.prototype.setWidth = function(value) {
  jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional float height = 11;
 * @return {number}
 */
proto.engineinterface.TextShapeModel.prototype.getHeight = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 11, 0.0));
};


/** @param {number} value */
proto.engineinterface.TextShapeModel.prototype.setHeight = function(value) {
  jspb.Message.setProto3FloatField(this, 11, value);
};


/**
 * optional bool adaptWidth = 12;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.engineinterface.TextShapeModel.prototype.getAdaptwidth = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 12, false));
};


/** @param {boolean} value */
proto.engineinterface.TextShapeModel.prototype.setAdaptwidth = function(value) {
  jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional bool adaptHeight = 13;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.engineinterface.TextShapeModel.prototype.getAdaptheight = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 13, false));
};


/** @param {boolean} value */
proto.engineinterface.TextShapeModel.prototype.setAdaptheight = function(value) {
  jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * optional float paddingTop = 14;
 * @return {number}
 */
proto.engineinterface.TextShapeModel.prototype.getPaddingtop = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 14, 0.0));
};


/** @param {number} value */
proto.engineinterface.TextShapeModel.prototype.setPaddingtop = function(value) {
  jspb.Message.setProto3FloatField(this, 14, value);
};


/**
 * optional float paddingRight = 15;
 * @return {number}
 */
proto.engineinterface.TextShapeModel.prototype.getPaddingright = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 15, 0.0));
};


/** @param {number} value */
proto.engineinterface.TextShapeModel.prototype.setPaddingright = function(value) {
  jspb.Message.setProto3FloatField(this, 15, value);
};


/**
 * optional float paddingBottom = 16;
 * @return {number}
 */
proto.engineinterface.TextShapeModel.prototype.getPaddingbottom = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 16, 0.0));
};


/** @param {number} value */
proto.engineinterface.TextShapeModel.prototype.setPaddingbottom = function(value) {
  jspb.Message.setProto3FloatField(this, 16, value);
};


/**
 * optional float paddingLeft = 17;
 * @return {number}
 */
proto.engineinterface.TextShapeModel.prototype.getPaddingleft = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 17, 0.0));
};


/** @param {number} value */
proto.engineinterface.TextShapeModel.prototype.setPaddingleft = function(value) {
  jspb.Message.setProto3FloatField(this, 17, value);
};


/**
 * optional float lineSpacing = 18;
 * @return {number}
 */
proto.engineinterface.TextShapeModel.prototype.getLinespacing = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 18, 0.0));
};


/** @param {number} value */
proto.engineinterface.TextShapeModel.prototype.setLinespacing = function(value) {
  jspb.Message.setProto3FloatField(this, 18, value);
};


/**
 * optional int32 lineCount = 19;
 * @return {number}
 */
proto.engineinterface.TextShapeModel.prototype.getLinecount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/** @param {number} value */
proto.engineinterface.TextShapeModel.prototype.setLinecount = function(value) {
  jspb.Message.setProto3IntField(this, 19, value);
};


/**
 * optional bool textWrapping = 20;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.engineinterface.TextShapeModel.prototype.getTextwrapping = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 20, false));
};


/** @param {boolean} value */
proto.engineinterface.TextShapeModel.prototype.setTextwrapping = function(value) {
  jspb.Message.setProto3BooleanField(this, 20, value);
};


/**
 * optional float shadowBlur = 21;
 * @return {number}
 */
proto.engineinterface.TextShapeModel.prototype.getShadowblur = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 21, 0.0));
};


/** @param {number} value */
proto.engineinterface.TextShapeModel.prototype.setShadowblur = function(value) {
  jspb.Message.setProto3FloatField(this, 21, value);
};


/**
 * optional float shadowOffsetX = 22;
 * @return {number}
 */
proto.engineinterface.TextShapeModel.prototype.getShadowoffsetx = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 22, 0.0));
};


/** @param {number} value */
proto.engineinterface.TextShapeModel.prototype.setShadowoffsetx = function(value) {
  jspb.Message.setProto3FloatField(this, 22, value);
};


/**
 * optional float shadowOffsetY = 23;
 * @return {number}
 */
proto.engineinterface.TextShapeModel.prototype.getShadowoffsety = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 23, 0.0));
};


/** @param {number} value */
proto.engineinterface.TextShapeModel.prototype.setShadowoffsety = function(value) {
  jspb.Message.setProto3FloatField(this, 23, value);
};


/**
 * optional Color shadowColor = 24;
 * @return {?proto.engineinterface.Color}
 */
proto.engineinterface.TextShapeModel.prototype.getShadowcolor = function() {
  return /** @type{?proto.engineinterface.Color} */ (
    jspb.Message.getWrapperField(this, proto.engineinterface.Color, 24));
};


/** @param {?proto.engineinterface.Color|undefined} value */
proto.engineinterface.TextShapeModel.prototype.setShadowcolor = function(value) {
  jspb.Message.setWrapperField(this, 24, value);
};


proto.engineinterface.TextShapeModel.prototype.clearShadowcolor = function() {
  this.setShadowcolor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.engineinterface.TextShapeModel.prototype.hasShadowcolor = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional float outlineWidth = 25;
 * @return {number}
 */
proto.engineinterface.TextShapeModel.prototype.getOutlinewidth = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 25, 0.0));
};


/** @param {number} value */
proto.engineinterface.TextShapeModel.prototype.setOutlinewidth = function(value) {
  jspb.Message.setProto3FloatField(this, 25, value);
};


/**
 * optional Color outlineColor = 26;
 * @return {?proto.engineinterface.Color}
 */
proto.engineinterface.TextShapeModel.prototype.getOutlinecolor = function() {
  return /** @type{?proto.engineinterface.Color} */ (
    jspb.Message.getWrapperField(this, proto.engineinterface.Color, 26));
};


/** @param {?proto.engineinterface.Color|undefined} value */
proto.engineinterface.TextShapeModel.prototype.setOutlinecolor = function(value) {
  jspb.Message.setWrapperField(this, 26, value);
};


proto.engineinterface.TextShapeModel.prototype.clearOutlinecolor = function() {
  this.setOutlinecolor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.engineinterface.TextShapeModel.prototype.hasOutlinecolor = function() {
  return jspb.Message.getField(this, 26) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.engineinterface.UpdateEntityComponent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.engineinterface.UpdateEntityComponent.oneofGroups_);
};
goog.inherits(proto.engineinterface.UpdateEntityComponent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.engineinterface.UpdateEntityComponent.displayName = 'proto.engineinterface.UpdateEntityComponent';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.engineinterface.UpdateEntityComponent.oneofGroups_ = [[4]];

/**
 * @enum {number}
 */
proto.engineinterface.UpdateEntityComponent.ModelCase = {
  MODEL_NOT_SET: 0,
  TEXTSHAPE: 4
};

/**
 * @return {proto.engineinterface.UpdateEntityComponent.ModelCase}
 */
proto.engineinterface.UpdateEntityComponent.prototype.getModelCase = function() {
  return /** @type {proto.engineinterface.UpdateEntityComponent.ModelCase} */(jspb.Message.computeOneofCase(this, proto.engineinterface.UpdateEntityComponent.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.engineinterface.UpdateEntityComponent.prototype.toObject = function(opt_includeInstance) {
  return proto.engineinterface.UpdateEntityComponent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.engineinterface.UpdateEntityComponent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.UpdateEntityComponent.toObject = function(includeInstance, msg) {
  var f, obj = {
    entityid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    classid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    textshape: (f = msg.getTextshape()) && proto.engineinterface.TextShapeModel.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.engineinterface.UpdateEntityComponent}
 */
proto.engineinterface.UpdateEntityComponent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.engineinterface.UpdateEntityComponent;
  return proto.engineinterface.UpdateEntityComponent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.engineinterface.UpdateEntityComponent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.engineinterface.UpdateEntityComponent}
 */
proto.engineinterface.UpdateEntityComponent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEntityid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setClassid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = new proto.engineinterface.TextShapeModel;
      reader.readMessage(value,proto.engineinterface.TextShapeModel.deserializeBinaryFromReader);
      msg.setTextshape(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.engineinterface.UpdateEntityComponent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.engineinterface.UpdateEntityComponent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.engineinterface.UpdateEntityComponent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.UpdateEntityComponent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntityid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getClassid();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTextshape();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.engineinterface.TextShapeModel.serializeBinaryToWriter
    );
  }
};


/**
 * optional string entityId = 1;
 * @return {string}
 */
proto.engineinterface.UpdateEntityComponent.prototype.getEntityid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.engineinterface.UpdateEntityComponent.prototype.setEntityid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 classId = 2;
 * @return {number}
 */
proto.engineinterface.UpdateEntityComponent.prototype.getClassid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.engineinterface.UpdateEntityComponent.prototype.setClassid = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.engineinterface.UpdateEntityComponent.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.engineinterface.UpdateEntityComponent.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional TextShapeModel textShape = 4;
 * @return {?proto.engineinterface.TextShapeModel}
 */
proto.engineinterface.UpdateEntityComponent.prototype.getTextshape = function() {
  return /** @type{?proto.engineinterface.TextShapeModel} */ (
    jspb.Message.getWrapperField(this, proto.engineinterface.TextShapeModel, 4));
};


/** @param {?proto.engineinterface.TextShapeModel|undefined} value */
proto.engineinterface.UpdateEntityComponent.prototype.setTextshape = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.engineinterface.UpdateEntityComponent.oneofGroups_[0], value);
};


proto.engineinterface.UpdateEntityComponent.prototype.clearTextshape = function() {
  this.setTextshape(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.engineinterface.UpdateEntityComponent.prototype.hasTextshape = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.engineinterface.ComponentCreated = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.engineinterface.ComponentCreated, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.engineinterface.ComponentCreated.displayName = 'proto.engineinterface.ComponentCreated';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.engineinterface.ComponentCreated.prototype.toObject = function(opt_includeInstance) {
  return proto.engineinterface.ComponentCreated.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.engineinterface.ComponentCreated} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.ComponentCreated.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    classid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    name: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.engineinterface.ComponentCreated}
 */
proto.engineinterface.ComponentCreated.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.engineinterface.ComponentCreated;
  return proto.engineinterface.ComponentCreated.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.engineinterface.ComponentCreated} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.engineinterface.ComponentCreated}
 */
proto.engineinterface.ComponentCreated.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setClassid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.engineinterface.ComponentCreated.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.engineinterface.ComponentCreated.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.engineinterface.ComponentCreated} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.ComponentCreated.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getClassid();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.engineinterface.ComponentCreated.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.engineinterface.ComponentCreated.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 classid = 2;
 * @return {number}
 */
proto.engineinterface.ComponentCreated.prototype.getClassid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.engineinterface.ComponentCreated.prototype.setClassid = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.engineinterface.ComponentCreated.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.engineinterface.ComponentCreated.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.engineinterface.AttachEntityComponent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.engineinterface.AttachEntityComponent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.engineinterface.AttachEntityComponent.displayName = 'proto.engineinterface.AttachEntityComponent';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.engineinterface.AttachEntityComponent.prototype.toObject = function(opt_includeInstance) {
  return proto.engineinterface.AttachEntityComponent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.engineinterface.AttachEntityComponent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.AttachEntityComponent.toObject = function(includeInstance, msg) {
  var f, obj = {
    entityid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    id: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.engineinterface.AttachEntityComponent}
 */
proto.engineinterface.AttachEntityComponent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.engineinterface.AttachEntityComponent;
  return proto.engineinterface.AttachEntityComponent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.engineinterface.AttachEntityComponent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.engineinterface.AttachEntityComponent}
 */
proto.engineinterface.AttachEntityComponent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEntityid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.engineinterface.AttachEntityComponent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.engineinterface.AttachEntityComponent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.engineinterface.AttachEntityComponent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.AttachEntityComponent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntityid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string entityId = 1;
 * @return {string}
 */
proto.engineinterface.AttachEntityComponent.prototype.getEntityid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.engineinterface.AttachEntityComponent.prototype.setEntityid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.engineinterface.AttachEntityComponent.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.engineinterface.AttachEntityComponent.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string id = 3;
 * @return {string}
 */
proto.engineinterface.AttachEntityComponent.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.engineinterface.AttachEntityComponent.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.engineinterface.ComponentDisposed = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.engineinterface.ComponentDisposed, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.engineinterface.ComponentDisposed.displayName = 'proto.engineinterface.ComponentDisposed';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.engineinterface.ComponentDisposed.prototype.toObject = function(opt_includeInstance) {
  return proto.engineinterface.ComponentDisposed.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.engineinterface.ComponentDisposed} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.ComponentDisposed.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.engineinterface.ComponentDisposed}
 */
proto.engineinterface.ComponentDisposed.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.engineinterface.ComponentDisposed;
  return proto.engineinterface.ComponentDisposed.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.engineinterface.ComponentDisposed} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.engineinterface.ComponentDisposed}
 */
proto.engineinterface.ComponentDisposed.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.engineinterface.ComponentDisposed.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.engineinterface.ComponentDisposed.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.engineinterface.ComponentDisposed} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.ComponentDisposed.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.engineinterface.ComponentDisposed.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.engineinterface.ComponentDisposed.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.engineinterface.ComponentUpdated = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.engineinterface.ComponentUpdated, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.engineinterface.ComponentUpdated.displayName = 'proto.engineinterface.ComponentUpdated';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.engineinterface.ComponentUpdated.prototype.toObject = function(opt_includeInstance) {
  return proto.engineinterface.ComponentUpdated.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.engineinterface.ComponentUpdated} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.ComponentUpdated.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    json: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.engineinterface.ComponentUpdated}
 */
proto.engineinterface.ComponentUpdated.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.engineinterface.ComponentUpdated;
  return proto.engineinterface.ComponentUpdated.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.engineinterface.ComponentUpdated} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.engineinterface.ComponentUpdated}
 */
proto.engineinterface.ComponentUpdated.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setJson(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.engineinterface.ComponentUpdated.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.engineinterface.ComponentUpdated.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.engineinterface.ComponentUpdated} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.ComponentUpdated.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getJson();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.engineinterface.ComponentUpdated.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.engineinterface.ComponentUpdated.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string json = 2;
 * @return {string}
 */
proto.engineinterface.ComponentUpdated.prototype.getJson = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.engineinterface.ComponentUpdated.prototype.setJson = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.engineinterface.SendSceneMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.engineinterface.SendSceneMessage.oneofGroups_);
};
goog.inherits(proto.engineinterface.SendSceneMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.engineinterface.SendSceneMessage.displayName = 'proto.engineinterface.SendSceneMessage';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.engineinterface.SendSceneMessage.oneofGroups_ = [[3,4,5,6,7,8,9,10,11,12]];

/**
 * @enum {number}
 */
proto.engineinterface.SendSceneMessage.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  CREATEENTITY: 3,
  REMOVEENTITY: 4,
  SETENTITYPARENT: 5,
  UPDATEENTITYCOMPONENT: 6,
  ATTACHENTITYCOMPONENT: 7,
  COMPONENTCREATED: 8,
  COMPONENTDISPOSED: 9,
  COMPONENTREMOVED: 10,
  COMPONENTUPDATED: 11,
  SCENESTARTED: 12
};

/**
 * @return {proto.engineinterface.SendSceneMessage.PayloadCase}
 */
proto.engineinterface.SendSceneMessage.prototype.getPayloadCase = function() {
  return /** @type {proto.engineinterface.SendSceneMessage.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.engineinterface.SendSceneMessage.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.engineinterface.SendSceneMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.engineinterface.SendSceneMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.engineinterface.SendSceneMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.SendSceneMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    sceneid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tag: jspb.Message.getFieldWithDefault(msg, 2, ""),
    createentity: (f = msg.getCreateentity()) && proto.engineinterface.CreateEntity.toObject(includeInstance, f),
    removeentity: (f = msg.getRemoveentity()) && proto.engineinterface.RemoveEntity.toObject(includeInstance, f),
    setentityparent: (f = msg.getSetentityparent()) && proto.engineinterface.SetEntityParent.toObject(includeInstance, f),
    updateentitycomponent: (f = msg.getUpdateentitycomponent()) && proto.engineinterface.UpdateEntityComponent.toObject(includeInstance, f),
    attachentitycomponent: (f = msg.getAttachentitycomponent()) && proto.engineinterface.AttachEntityComponent.toObject(includeInstance, f),
    componentcreated: (f = msg.getComponentcreated()) && proto.engineinterface.ComponentCreated.toObject(includeInstance, f),
    componentdisposed: (f = msg.getComponentdisposed()) && proto.engineinterface.ComponentDisposed.toObject(includeInstance, f),
    componentremoved: (f = msg.getComponentremoved()) && proto.engineinterface.ComponentRemoved.toObject(includeInstance, f),
    componentupdated: (f = msg.getComponentupdated()) && proto.engineinterface.ComponentUpdated.toObject(includeInstance, f),
    scenestarted: (f = msg.getScenestarted()) && google_protobuf_empty_pb.Empty.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.engineinterface.SendSceneMessage}
 */
proto.engineinterface.SendSceneMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.engineinterface.SendSceneMessage;
  return proto.engineinterface.SendSceneMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.engineinterface.SendSceneMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.engineinterface.SendSceneMessage}
 */
proto.engineinterface.SendSceneMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSceneid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTag(value);
      break;
    case 3:
      var value = new proto.engineinterface.CreateEntity;
      reader.readMessage(value,proto.engineinterface.CreateEntity.deserializeBinaryFromReader);
      msg.setCreateentity(value);
      break;
    case 4:
      var value = new proto.engineinterface.RemoveEntity;
      reader.readMessage(value,proto.engineinterface.RemoveEntity.deserializeBinaryFromReader);
      msg.setRemoveentity(value);
      break;
    case 5:
      var value = new proto.engineinterface.SetEntityParent;
      reader.readMessage(value,proto.engineinterface.SetEntityParent.deserializeBinaryFromReader);
      msg.setSetentityparent(value);
      break;
    case 6:
      var value = new proto.engineinterface.UpdateEntityComponent;
      reader.readMessage(value,proto.engineinterface.UpdateEntityComponent.deserializeBinaryFromReader);
      msg.setUpdateentitycomponent(value);
      break;
    case 7:
      var value = new proto.engineinterface.AttachEntityComponent;
      reader.readMessage(value,proto.engineinterface.AttachEntityComponent.deserializeBinaryFromReader);
      msg.setAttachentitycomponent(value);
      break;
    case 8:
      var value = new proto.engineinterface.ComponentCreated;
      reader.readMessage(value,proto.engineinterface.ComponentCreated.deserializeBinaryFromReader);
      msg.setComponentcreated(value);
      break;
    case 9:
      var value = new proto.engineinterface.ComponentDisposed;
      reader.readMessage(value,proto.engineinterface.ComponentDisposed.deserializeBinaryFromReader);
      msg.setComponentdisposed(value);
      break;
    case 10:
      var value = new proto.engineinterface.ComponentRemoved;
      reader.readMessage(value,proto.engineinterface.ComponentRemoved.deserializeBinaryFromReader);
      msg.setComponentremoved(value);
      break;
    case 11:
      var value = new proto.engineinterface.ComponentUpdated;
      reader.readMessage(value,proto.engineinterface.ComponentUpdated.deserializeBinaryFromReader);
      msg.setComponentupdated(value);
      break;
    case 12:
      var value = new google_protobuf_empty_pb.Empty;
      reader.readMessage(value,google_protobuf_empty_pb.Empty.deserializeBinaryFromReader);
      msg.setScenestarted(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.engineinterface.SendSceneMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.engineinterface.SendSceneMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.engineinterface.SendSceneMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.SendSceneMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSceneid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTag();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCreateentity();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.engineinterface.CreateEntity.serializeBinaryToWriter
    );
  }
  f = message.getRemoveentity();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.engineinterface.RemoveEntity.serializeBinaryToWriter
    );
  }
  f = message.getSetentityparent();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.engineinterface.SetEntityParent.serializeBinaryToWriter
    );
  }
  f = message.getUpdateentitycomponent();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.engineinterface.UpdateEntityComponent.serializeBinaryToWriter
    );
  }
  f = message.getAttachentitycomponent();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.engineinterface.AttachEntityComponent.serializeBinaryToWriter
    );
  }
  f = message.getComponentcreated();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.engineinterface.ComponentCreated.serializeBinaryToWriter
    );
  }
  f = message.getComponentdisposed();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.engineinterface.ComponentDisposed.serializeBinaryToWriter
    );
  }
  f = message.getComponentremoved();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.engineinterface.ComponentRemoved.serializeBinaryToWriter
    );
  }
  f = message.getComponentupdated();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.engineinterface.ComponentUpdated.serializeBinaryToWriter
    );
  }
  f = message.getScenestarted();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      google_protobuf_empty_pb.Empty.serializeBinaryToWriter
    );
  }
};


/**
 * optional string sceneId = 1;
 * @return {string}
 */
proto.engineinterface.SendSceneMessage.prototype.getSceneid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.engineinterface.SendSceneMessage.prototype.setSceneid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string tag = 2;
 * @return {string}
 */
proto.engineinterface.SendSceneMessage.prototype.getTag = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.engineinterface.SendSceneMessage.prototype.setTag = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional CreateEntity createEntity = 3;
 * @return {?proto.engineinterface.CreateEntity}
 */
proto.engineinterface.SendSceneMessage.prototype.getCreateentity = function() {
  return /** @type{?proto.engineinterface.CreateEntity} */ (
    jspb.Message.getWrapperField(this, proto.engineinterface.CreateEntity, 3));
};


/** @param {?proto.engineinterface.CreateEntity|undefined} value */
proto.engineinterface.SendSceneMessage.prototype.setCreateentity = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.engineinterface.SendSceneMessage.oneofGroups_[0], value);
};


proto.engineinterface.SendSceneMessage.prototype.clearCreateentity = function() {
  this.setCreateentity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.engineinterface.SendSceneMessage.prototype.hasCreateentity = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional RemoveEntity removeEntity = 4;
 * @return {?proto.engineinterface.RemoveEntity}
 */
proto.engineinterface.SendSceneMessage.prototype.getRemoveentity = function() {
  return /** @type{?proto.engineinterface.RemoveEntity} */ (
    jspb.Message.getWrapperField(this, proto.engineinterface.RemoveEntity, 4));
};


/** @param {?proto.engineinterface.RemoveEntity|undefined} value */
proto.engineinterface.SendSceneMessage.prototype.setRemoveentity = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.engineinterface.SendSceneMessage.oneofGroups_[0], value);
};


proto.engineinterface.SendSceneMessage.prototype.clearRemoveentity = function() {
  this.setRemoveentity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.engineinterface.SendSceneMessage.prototype.hasRemoveentity = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional SetEntityParent setEntityParent = 5;
 * @return {?proto.engineinterface.SetEntityParent}
 */
proto.engineinterface.SendSceneMessage.prototype.getSetentityparent = function() {
  return /** @type{?proto.engineinterface.SetEntityParent} */ (
    jspb.Message.getWrapperField(this, proto.engineinterface.SetEntityParent, 5));
};


/** @param {?proto.engineinterface.SetEntityParent|undefined} value */
proto.engineinterface.SendSceneMessage.prototype.setSetentityparent = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.engineinterface.SendSceneMessage.oneofGroups_[0], value);
};


proto.engineinterface.SendSceneMessage.prototype.clearSetentityparent = function() {
  this.setSetentityparent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.engineinterface.SendSceneMessage.prototype.hasSetentityparent = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional UpdateEntityComponent updateEntityComponent = 6;
 * @return {?proto.engineinterface.UpdateEntityComponent}
 */
proto.engineinterface.SendSceneMessage.prototype.getUpdateentitycomponent = function() {
  return /** @type{?proto.engineinterface.UpdateEntityComponent} */ (
    jspb.Message.getWrapperField(this, proto.engineinterface.UpdateEntityComponent, 6));
};


/** @param {?proto.engineinterface.UpdateEntityComponent|undefined} value */
proto.engineinterface.SendSceneMessage.prototype.setUpdateentitycomponent = function(value) {
  jspb.Message.setOneofWrapperField(this, 6, proto.engineinterface.SendSceneMessage.oneofGroups_[0], value);
};


proto.engineinterface.SendSceneMessage.prototype.clearUpdateentitycomponent = function() {
  this.setUpdateentitycomponent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.engineinterface.SendSceneMessage.prototype.hasUpdateentitycomponent = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional AttachEntityComponent attachEntityComponent = 7;
 * @return {?proto.engineinterface.AttachEntityComponent}
 */
proto.engineinterface.SendSceneMessage.prototype.getAttachentitycomponent = function() {
  return /** @type{?proto.engineinterface.AttachEntityComponent} */ (
    jspb.Message.getWrapperField(this, proto.engineinterface.AttachEntityComponent, 7));
};


/** @param {?proto.engineinterface.AttachEntityComponent|undefined} value */
proto.engineinterface.SendSceneMessage.prototype.setAttachentitycomponent = function(value) {
  jspb.Message.setOneofWrapperField(this, 7, proto.engineinterface.SendSceneMessage.oneofGroups_[0], value);
};


proto.engineinterface.SendSceneMessage.prototype.clearAttachentitycomponent = function() {
  this.setAttachentitycomponent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.engineinterface.SendSceneMessage.prototype.hasAttachentitycomponent = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional ComponentCreated componentCreated = 8;
 * @return {?proto.engineinterface.ComponentCreated}
 */
proto.engineinterface.SendSceneMessage.prototype.getComponentcreated = function() {
  return /** @type{?proto.engineinterface.ComponentCreated} */ (
    jspb.Message.getWrapperField(this, proto.engineinterface.ComponentCreated, 8));
};


/** @param {?proto.engineinterface.ComponentCreated|undefined} value */
proto.engineinterface.SendSceneMessage.prototype.setComponentcreated = function(value) {
  jspb.Message.setOneofWrapperField(this, 8, proto.engineinterface.SendSceneMessage.oneofGroups_[0], value);
};


proto.engineinterface.SendSceneMessage.prototype.clearComponentcreated = function() {
  this.setComponentcreated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.engineinterface.SendSceneMessage.prototype.hasComponentcreated = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional ComponentDisposed componentDisposed = 9;
 * @return {?proto.engineinterface.ComponentDisposed}
 */
proto.engineinterface.SendSceneMessage.prototype.getComponentdisposed = function() {
  return /** @type{?proto.engineinterface.ComponentDisposed} */ (
    jspb.Message.getWrapperField(this, proto.engineinterface.ComponentDisposed, 9));
};


/** @param {?proto.engineinterface.ComponentDisposed|undefined} value */
proto.engineinterface.SendSceneMessage.prototype.setComponentdisposed = function(value) {
  jspb.Message.setOneofWrapperField(this, 9, proto.engineinterface.SendSceneMessage.oneofGroups_[0], value);
};


proto.engineinterface.SendSceneMessage.prototype.clearComponentdisposed = function() {
  this.setComponentdisposed(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.engineinterface.SendSceneMessage.prototype.hasComponentdisposed = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional ComponentRemoved componentRemoved = 10;
 * @return {?proto.engineinterface.ComponentRemoved}
 */
proto.engineinterface.SendSceneMessage.prototype.getComponentremoved = function() {
  return /** @type{?proto.engineinterface.ComponentRemoved} */ (
    jspb.Message.getWrapperField(this, proto.engineinterface.ComponentRemoved, 10));
};


/** @param {?proto.engineinterface.ComponentRemoved|undefined} value */
proto.engineinterface.SendSceneMessage.prototype.setComponentremoved = function(value) {
  jspb.Message.setOneofWrapperField(this, 10, proto.engineinterface.SendSceneMessage.oneofGroups_[0], value);
};


proto.engineinterface.SendSceneMessage.prototype.clearComponentremoved = function() {
  this.setComponentremoved(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.engineinterface.SendSceneMessage.prototype.hasComponentremoved = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional ComponentUpdated componentUpdated = 11;
 * @return {?proto.engineinterface.ComponentUpdated}
 */
proto.engineinterface.SendSceneMessage.prototype.getComponentupdated = function() {
  return /** @type{?proto.engineinterface.ComponentUpdated} */ (
    jspb.Message.getWrapperField(this, proto.engineinterface.ComponentUpdated, 11));
};


/** @param {?proto.engineinterface.ComponentUpdated|undefined} value */
proto.engineinterface.SendSceneMessage.prototype.setComponentupdated = function(value) {
  jspb.Message.setOneofWrapperField(this, 11, proto.engineinterface.SendSceneMessage.oneofGroups_[0], value);
};


proto.engineinterface.SendSceneMessage.prototype.clearComponentupdated = function() {
  this.setComponentupdated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.engineinterface.SendSceneMessage.prototype.hasComponentupdated = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional google.protobuf.Empty sceneStarted = 12;
 * @return {?proto.google.protobuf.Empty}
 */
proto.engineinterface.SendSceneMessage.prototype.getScenestarted = function() {
  return /** @type{?proto.google.protobuf.Empty} */ (
    jspb.Message.getWrapperField(this, google_protobuf_empty_pb.Empty, 12));
};


/** @param {?proto.google.protobuf.Empty|undefined} value */
proto.engineinterface.SendSceneMessage.prototype.setScenestarted = function(value) {
  jspb.Message.setOneofWrapperField(this, 12, proto.engineinterface.SendSceneMessage.oneofGroups_[0], value);
};


proto.engineinterface.SendSceneMessage.prototype.clearScenestarted = function() {
  this.setScenestarted(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.engineinterface.SendSceneMessage.prototype.hasScenestarted = function() {
  return jspb.Message.getField(this, 12) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.engineinterface.SetPosition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.engineinterface.SetPosition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.engineinterface.SetPosition.displayName = 'proto.engineinterface.SetPosition';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.engineinterface.SetPosition.prototype.toObject = function(opt_includeInstance) {
  return proto.engineinterface.SetPosition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.engineinterface.SetPosition} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.SetPosition.toObject = function(includeInstance, msg) {
  var f, obj = {
    x: +jspb.Message.getFieldWithDefault(msg, 1, 0.0),
    y: +jspb.Message.getFieldWithDefault(msg, 2, 0.0),
    z: +jspb.Message.getFieldWithDefault(msg, 3, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.engineinterface.SetPosition}
 */
proto.engineinterface.SetPosition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.engineinterface.SetPosition;
  return proto.engineinterface.SetPosition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.engineinterface.SetPosition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.engineinterface.SetPosition}
 */
proto.engineinterface.SetPosition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setX(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setY(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setZ(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.engineinterface.SetPosition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.engineinterface.SetPosition.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.engineinterface.SetPosition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.SetPosition.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getX();
  if (f !== 0.0) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = message.getY();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = message.getZ();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
};


/**
 * optional float x = 1;
 * @return {number}
 */
proto.engineinterface.SetPosition.prototype.getX = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.engineinterface.SetPosition.prototype.setX = function(value) {
  jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional float y = 2;
 * @return {number}
 */
proto.engineinterface.SetPosition.prototype.getY = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.engineinterface.SetPosition.prototype.setY = function(value) {
  jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional float z = 3;
 * @return {number}
 */
proto.engineinterface.SetPosition.prototype.getZ = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.engineinterface.SetPosition.prototype.setZ = function(value) {
  jspb.Message.setProto3FloatField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.engineinterface.ContentMapping = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.engineinterface.ContentMapping, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.engineinterface.ContentMapping.displayName = 'proto.engineinterface.ContentMapping';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.engineinterface.ContentMapping.prototype.toObject = function(opt_includeInstance) {
  return proto.engineinterface.ContentMapping.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.engineinterface.ContentMapping} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.ContentMapping.toObject = function(includeInstance, msg) {
  var f, obj = {
    file: jspb.Message.getFieldWithDefault(msg, 1, ""),
    hash: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.engineinterface.ContentMapping}
 */
proto.engineinterface.ContentMapping.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.engineinterface.ContentMapping;
  return proto.engineinterface.ContentMapping.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.engineinterface.ContentMapping} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.engineinterface.ContentMapping}
 */
proto.engineinterface.ContentMapping.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFile(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHash(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.engineinterface.ContentMapping.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.engineinterface.ContentMapping.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.engineinterface.ContentMapping} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.ContentMapping.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFile();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getHash();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string file = 1;
 * @return {string}
 */
proto.engineinterface.ContentMapping.prototype.getFile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.engineinterface.ContentMapping.prototype.setFile = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string hash = 2;
 * @return {string}
 */
proto.engineinterface.ContentMapping.prototype.getHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.engineinterface.ContentMapping.prototype.setHash = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.engineinterface.Position = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.engineinterface.Position, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.engineinterface.Position.displayName = 'proto.engineinterface.Position';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.engineinterface.Position.prototype.toObject = function(opt_includeInstance) {
  return proto.engineinterface.Position.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.engineinterface.Position} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.Position.toObject = function(includeInstance, msg) {
  var f, obj = {
    x: +jspb.Message.getFieldWithDefault(msg, 1, 0.0),
    y: +jspb.Message.getFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.engineinterface.Position}
 */
proto.engineinterface.Position.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.engineinterface.Position;
  return proto.engineinterface.Position.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.engineinterface.Position} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.engineinterface.Position}
 */
proto.engineinterface.Position.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setX(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setY(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.engineinterface.Position.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.engineinterface.Position.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.engineinterface.Position} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.Position.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getX();
  if (f !== 0.0) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = message.getY();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
};


/**
 * optional float x = 1;
 * @return {number}
 */
proto.engineinterface.Position.prototype.getX = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.engineinterface.Position.prototype.setX = function(value) {
  jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional float y = 2;
 * @return {number}
 */
proto.engineinterface.Position.prototype.getY = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.engineinterface.Position.prototype.setY = function(value) {
  jspb.Message.setProto3FloatField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.engineinterface.LoadParcelScenes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.engineinterface.LoadParcelScenes.repeatedFields_, null);
};
goog.inherits(proto.engineinterface.LoadParcelScenes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.engineinterface.LoadParcelScenes.displayName = 'proto.engineinterface.LoadParcelScenes';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.engineinterface.LoadParcelScenes.repeatedFields_ = [3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.engineinterface.LoadParcelScenes.prototype.toObject = function(opt_includeInstance) {
  return proto.engineinterface.LoadParcelScenes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.engineinterface.LoadParcelScenes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.LoadParcelScenes.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    baseposition: (f = msg.getBaseposition()) && proto.engineinterface.Position.toObject(includeInstance, f),
    parcelsList: jspb.Message.toObjectList(msg.getParcelsList(),
    proto.engineinterface.Position.toObject, includeInstance),
    contentsList: jspb.Message.toObjectList(msg.getContentsList(),
    proto.engineinterface.ContentMapping.toObject, includeInstance),
    baseurl: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.engineinterface.LoadParcelScenes}
 */
proto.engineinterface.LoadParcelScenes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.engineinterface.LoadParcelScenes;
  return proto.engineinterface.LoadParcelScenes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.engineinterface.LoadParcelScenes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.engineinterface.LoadParcelScenes}
 */
proto.engineinterface.LoadParcelScenes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.engineinterface.Position;
      reader.readMessage(value,proto.engineinterface.Position.deserializeBinaryFromReader);
      msg.setBaseposition(value);
      break;
    case 3:
      var value = new proto.engineinterface.Position;
      reader.readMessage(value,proto.engineinterface.Position.deserializeBinaryFromReader);
      msg.addParcels(value);
      break;
    case 4:
      var value = new proto.engineinterface.ContentMapping;
      reader.readMessage(value,proto.engineinterface.ContentMapping.deserializeBinaryFromReader);
      msg.addContents(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setBaseurl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.engineinterface.LoadParcelScenes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.engineinterface.LoadParcelScenes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.engineinterface.LoadParcelScenes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.LoadParcelScenes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBaseposition();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.engineinterface.Position.serializeBinaryToWriter
    );
  }
  f = message.getParcelsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.engineinterface.Position.serializeBinaryToWriter
    );
  }
  f = message.getContentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.engineinterface.ContentMapping.serializeBinaryToWriter
    );
  }
  f = message.getBaseurl();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.engineinterface.LoadParcelScenes.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.engineinterface.LoadParcelScenes.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Position basePosition = 2;
 * @return {?proto.engineinterface.Position}
 */
proto.engineinterface.LoadParcelScenes.prototype.getBaseposition = function() {
  return /** @type{?proto.engineinterface.Position} */ (
    jspb.Message.getWrapperField(this, proto.engineinterface.Position, 2));
};


/** @param {?proto.engineinterface.Position|undefined} value */
proto.engineinterface.LoadParcelScenes.prototype.setBaseposition = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.engineinterface.LoadParcelScenes.prototype.clearBaseposition = function() {
  this.setBaseposition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.engineinterface.LoadParcelScenes.prototype.hasBaseposition = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated Position parcels = 3;
 * @return {!Array<!proto.engineinterface.Position>}
 */
proto.engineinterface.LoadParcelScenes.prototype.getParcelsList = function() {
  return /** @type{!Array<!proto.engineinterface.Position>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.engineinterface.Position, 3));
};


/** @param {!Array<!proto.engineinterface.Position>} value */
proto.engineinterface.LoadParcelScenes.prototype.setParcelsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.engineinterface.Position=} opt_value
 * @param {number=} opt_index
 * @return {!proto.engineinterface.Position}
 */
proto.engineinterface.LoadParcelScenes.prototype.addParcels = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.engineinterface.Position, opt_index);
};


proto.engineinterface.LoadParcelScenes.prototype.clearParcelsList = function() {
  this.setParcelsList([]);
};


/**
 * repeated ContentMapping contents = 4;
 * @return {!Array<!proto.engineinterface.ContentMapping>}
 */
proto.engineinterface.LoadParcelScenes.prototype.getContentsList = function() {
  return /** @type{!Array<!proto.engineinterface.ContentMapping>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.engineinterface.ContentMapping, 4));
};


/** @param {!Array<!proto.engineinterface.ContentMapping>} value */
proto.engineinterface.LoadParcelScenes.prototype.setContentsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.engineinterface.ContentMapping=} opt_value
 * @param {number=} opt_index
 * @return {!proto.engineinterface.ContentMapping}
 */
proto.engineinterface.LoadParcelScenes.prototype.addContents = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.engineinterface.ContentMapping, opt_index);
};


proto.engineinterface.LoadParcelScenes.prototype.clearContentsList = function() {
  this.setContentsList([]);
};


/**
 * optional string baseUrl = 5;
 * @return {string}
 */
proto.engineinterface.LoadParcelScenes.prototype.getBaseurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.engineinterface.LoadParcelScenes.prototype.setBaseurl = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.engineinterface.CreateUIScene = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.engineinterface.CreateUIScene, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.engineinterface.CreateUIScene.displayName = 'proto.engineinterface.CreateUIScene';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.engineinterface.CreateUIScene.prototype.toObject = function(opt_includeInstance) {
  return proto.engineinterface.CreateUIScene.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.engineinterface.CreateUIScene} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.CreateUIScene.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    baseurl: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.engineinterface.CreateUIScene}
 */
proto.engineinterface.CreateUIScene.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.engineinterface.CreateUIScene;
  return proto.engineinterface.CreateUIScene.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.engineinterface.CreateUIScene} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.engineinterface.CreateUIScene}
 */
proto.engineinterface.CreateUIScene.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBaseurl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.engineinterface.CreateUIScene.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.engineinterface.CreateUIScene.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.engineinterface.CreateUIScene} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.CreateUIScene.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBaseurl();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.engineinterface.CreateUIScene.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.engineinterface.CreateUIScene.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string baseUrl = 2;
 * @return {string}
 */
proto.engineinterface.CreateUIScene.prototype.getBaseurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.engineinterface.CreateUIScene.prototype.setBaseurl = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.engineinterface.UnloadScene = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.engineinterface.UnloadScene, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.engineinterface.UnloadScene.displayName = 'proto.engineinterface.UnloadScene';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.engineinterface.UnloadScene.prototype.toObject = function(opt_includeInstance) {
  return proto.engineinterface.UnloadScene.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.engineinterface.UnloadScene} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.UnloadScene.toObject = function(includeInstance, msg) {
  var f, obj = {
    sceneid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.engineinterface.UnloadScene}
 */
proto.engineinterface.UnloadScene.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.engineinterface.UnloadScene;
  return proto.engineinterface.UnloadScene.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.engineinterface.UnloadScene} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.engineinterface.UnloadScene}
 */
proto.engineinterface.UnloadScene.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSceneid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.engineinterface.UnloadScene.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.engineinterface.UnloadScene.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.engineinterface.UnloadScene} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.UnloadScene.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSceneid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string sceneId = 1;
 * @return {string}
 */
proto.engineinterface.UnloadScene.prototype.getSceneid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.engineinterface.UnloadScene.prototype.setSceneid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.engineinterface.DclMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.engineinterface.DclMessage.oneofGroups_);
};
goog.inherits(proto.engineinterface.DclMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.engineinterface.DclMessage.displayName = 'proto.engineinterface.DclMessage';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.engineinterface.DclMessage.oneofGroups_ = [[1,2,3,4,5,6,7,8,9]];

/**
 * @enum {number}
 */
proto.engineinterface.DclMessage.MessageCase = {
  MESSAGE_NOT_SET: 0,
  SETDEBUG: 1,
  SETSCENEDEBUGPANEL: 2,
  SETENGINEDEBUGPANEL: 3,
  SENDSCENEMESSAGE: 4,
  LOADPARCELSCENES: 5,
  UNLOADSCENE: 6,
  SETPOSITION: 7,
  RESET: 8,
  CREATEUISCENE: 9
};

/**
 * @return {proto.engineinterface.DclMessage.MessageCase}
 */
proto.engineinterface.DclMessage.prototype.getMessageCase = function() {
  return /** @type {proto.engineinterface.DclMessage.MessageCase} */(jspb.Message.computeOneofCase(this, proto.engineinterface.DclMessage.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.engineinterface.DclMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.engineinterface.DclMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.engineinterface.DclMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.DclMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    setdebug: (f = msg.getSetdebug()) && google_protobuf_empty_pb.Empty.toObject(includeInstance, f),
    setscenedebugpanel: (f = msg.getSetscenedebugpanel()) && google_protobuf_empty_pb.Empty.toObject(includeInstance, f),
    setenginedebugpanel: (f = msg.getSetenginedebugpanel()) && google_protobuf_empty_pb.Empty.toObject(includeInstance, f),
    sendscenemessage: (f = msg.getSendscenemessage()) && proto.engineinterface.SendSceneMessage.toObject(includeInstance, f),
    loadparcelscenes: (f = msg.getLoadparcelscenes()) && proto.engineinterface.LoadParcelScenes.toObject(includeInstance, f),
    unloadscene: (f = msg.getUnloadscene()) && proto.engineinterface.UnloadScene.toObject(includeInstance, f),
    setposition: (f = msg.getSetposition()) && proto.engineinterface.SetPosition.toObject(includeInstance, f),
    reset: (f = msg.getReset()) && google_protobuf_empty_pb.Empty.toObject(includeInstance, f),
    createuiscene: (f = msg.getCreateuiscene()) && proto.engineinterface.CreateUIScene.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.engineinterface.DclMessage}
 */
proto.engineinterface.DclMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.engineinterface.DclMessage;
  return proto.engineinterface.DclMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.engineinterface.DclMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.engineinterface.DclMessage}
 */
proto.engineinterface.DclMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_empty_pb.Empty;
      reader.readMessage(value,google_protobuf_empty_pb.Empty.deserializeBinaryFromReader);
      msg.setSetdebug(value);
      break;
    case 2:
      var value = new google_protobuf_empty_pb.Empty;
      reader.readMessage(value,google_protobuf_empty_pb.Empty.deserializeBinaryFromReader);
      msg.setSetscenedebugpanel(value);
      break;
    case 3:
      var value = new google_protobuf_empty_pb.Empty;
      reader.readMessage(value,google_protobuf_empty_pb.Empty.deserializeBinaryFromReader);
      msg.setSetenginedebugpanel(value);
      break;
    case 4:
      var value = new proto.engineinterface.SendSceneMessage;
      reader.readMessage(value,proto.engineinterface.SendSceneMessage.deserializeBinaryFromReader);
      msg.setSendscenemessage(value);
      break;
    case 5:
      var value = new proto.engineinterface.LoadParcelScenes;
      reader.readMessage(value,proto.engineinterface.LoadParcelScenes.deserializeBinaryFromReader);
      msg.setLoadparcelscenes(value);
      break;
    case 6:
      var value = new proto.engineinterface.UnloadScene;
      reader.readMessage(value,proto.engineinterface.UnloadScene.deserializeBinaryFromReader);
      msg.setUnloadscene(value);
      break;
    case 7:
      var value = new proto.engineinterface.SetPosition;
      reader.readMessage(value,proto.engineinterface.SetPosition.deserializeBinaryFromReader);
      msg.setSetposition(value);
      break;
    case 8:
      var value = new google_protobuf_empty_pb.Empty;
      reader.readMessage(value,google_protobuf_empty_pb.Empty.deserializeBinaryFromReader);
      msg.setReset(value);
      break;
    case 9:
      var value = new proto.engineinterface.CreateUIScene;
      reader.readMessage(value,proto.engineinterface.CreateUIScene.deserializeBinaryFromReader);
      msg.setCreateuiscene(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.engineinterface.DclMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.engineinterface.DclMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.engineinterface.DclMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engineinterface.DclMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSetdebug();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_empty_pb.Empty.serializeBinaryToWriter
    );
  }
  f = message.getSetscenedebugpanel();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_empty_pb.Empty.serializeBinaryToWriter
    );
  }
  f = message.getSetenginedebugpanel();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_empty_pb.Empty.serializeBinaryToWriter
    );
  }
  f = message.getSendscenemessage();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.engineinterface.SendSceneMessage.serializeBinaryToWriter
    );
  }
  f = message.getLoadparcelscenes();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.engineinterface.LoadParcelScenes.serializeBinaryToWriter
    );
  }
  f = message.getUnloadscene();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.engineinterface.UnloadScene.serializeBinaryToWriter
    );
  }
  f = message.getSetposition();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.engineinterface.SetPosition.serializeBinaryToWriter
    );
  }
  f = message.getReset();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_empty_pb.Empty.serializeBinaryToWriter
    );
  }
  f = message.getCreateuiscene();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.engineinterface.CreateUIScene.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Empty setDebug = 1;
 * @return {?proto.google.protobuf.Empty}
 */
proto.engineinterface.DclMessage.prototype.getSetdebug = function() {
  return /** @type{?proto.google.protobuf.Empty} */ (
    jspb.Message.getWrapperField(this, google_protobuf_empty_pb.Empty, 1));
};


/** @param {?proto.google.protobuf.Empty|undefined} value */
proto.engineinterface.DclMessage.prototype.setSetdebug = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.engineinterface.DclMessage.oneofGroups_[0], value);
};


proto.engineinterface.DclMessage.prototype.clearSetdebug = function() {
  this.setSetdebug(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.engineinterface.DclMessage.prototype.hasSetdebug = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Empty setSceneDebugPanel = 2;
 * @return {?proto.google.protobuf.Empty}
 */
proto.engineinterface.DclMessage.prototype.getSetscenedebugpanel = function() {
  return /** @type{?proto.google.protobuf.Empty} */ (
    jspb.Message.getWrapperField(this, google_protobuf_empty_pb.Empty, 2));
};


/** @param {?proto.google.protobuf.Empty|undefined} value */
proto.engineinterface.DclMessage.prototype.setSetscenedebugpanel = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.engineinterface.DclMessage.oneofGroups_[0], value);
};


proto.engineinterface.DclMessage.prototype.clearSetscenedebugpanel = function() {
  this.setSetscenedebugpanel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.engineinterface.DclMessage.prototype.hasSetscenedebugpanel = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Empty setEngineDebugPanel = 3;
 * @return {?proto.google.protobuf.Empty}
 */
proto.engineinterface.DclMessage.prototype.getSetenginedebugpanel = function() {
  return /** @type{?proto.google.protobuf.Empty} */ (
    jspb.Message.getWrapperField(this, google_protobuf_empty_pb.Empty, 3));
};


/** @param {?proto.google.protobuf.Empty|undefined} value */
proto.engineinterface.DclMessage.prototype.setSetenginedebugpanel = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.engineinterface.DclMessage.oneofGroups_[0], value);
};


proto.engineinterface.DclMessage.prototype.clearSetenginedebugpanel = function() {
  this.setSetenginedebugpanel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.engineinterface.DclMessage.prototype.hasSetenginedebugpanel = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional SendSceneMessage sendSceneMessage = 4;
 * @return {?proto.engineinterface.SendSceneMessage}
 */
proto.engineinterface.DclMessage.prototype.getSendscenemessage = function() {
  return /** @type{?proto.engineinterface.SendSceneMessage} */ (
    jspb.Message.getWrapperField(this, proto.engineinterface.SendSceneMessage, 4));
};


/** @param {?proto.engineinterface.SendSceneMessage|undefined} value */
proto.engineinterface.DclMessage.prototype.setSendscenemessage = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.engineinterface.DclMessage.oneofGroups_[0], value);
};


proto.engineinterface.DclMessage.prototype.clearSendscenemessage = function() {
  this.setSendscenemessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.engineinterface.DclMessage.prototype.hasSendscenemessage = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional LoadParcelScenes loadParcelScenes = 5;
 * @return {?proto.engineinterface.LoadParcelScenes}
 */
proto.engineinterface.DclMessage.prototype.getLoadparcelscenes = function() {
  return /** @type{?proto.engineinterface.LoadParcelScenes} */ (
    jspb.Message.getWrapperField(this, proto.engineinterface.LoadParcelScenes, 5));
};


/** @param {?proto.engineinterface.LoadParcelScenes|undefined} value */
proto.engineinterface.DclMessage.prototype.setLoadparcelscenes = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.engineinterface.DclMessage.oneofGroups_[0], value);
};


proto.engineinterface.DclMessage.prototype.clearLoadparcelscenes = function() {
  this.setLoadparcelscenes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.engineinterface.DclMessage.prototype.hasLoadparcelscenes = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional UnloadScene unloadScene = 6;
 * @return {?proto.engineinterface.UnloadScene}
 */
proto.engineinterface.DclMessage.prototype.getUnloadscene = function() {
  return /** @type{?proto.engineinterface.UnloadScene} */ (
    jspb.Message.getWrapperField(this, proto.engineinterface.UnloadScene, 6));
};


/** @param {?proto.engineinterface.UnloadScene|undefined} value */
proto.engineinterface.DclMessage.prototype.setUnloadscene = function(value) {
  jspb.Message.setOneofWrapperField(this, 6, proto.engineinterface.DclMessage.oneofGroups_[0], value);
};


proto.engineinterface.DclMessage.prototype.clearUnloadscene = function() {
  this.setUnloadscene(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.engineinterface.DclMessage.prototype.hasUnloadscene = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional SetPosition setPosition = 7;
 * @return {?proto.engineinterface.SetPosition}
 */
proto.engineinterface.DclMessage.prototype.getSetposition = function() {
  return /** @type{?proto.engineinterface.SetPosition} */ (
    jspb.Message.getWrapperField(this, proto.engineinterface.SetPosition, 7));
};


/** @param {?proto.engineinterface.SetPosition|undefined} value */
proto.engineinterface.DclMessage.prototype.setSetposition = function(value) {
  jspb.Message.setOneofWrapperField(this, 7, proto.engineinterface.DclMessage.oneofGroups_[0], value);
};


proto.engineinterface.DclMessage.prototype.clearSetposition = function() {
  this.setSetposition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.engineinterface.DclMessage.prototype.hasSetposition = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional google.protobuf.Empty reset = 8;
 * @return {?proto.google.protobuf.Empty}
 */
proto.engineinterface.DclMessage.prototype.getReset = function() {
  return /** @type{?proto.google.protobuf.Empty} */ (
    jspb.Message.getWrapperField(this, google_protobuf_empty_pb.Empty, 8));
};


/** @param {?proto.google.protobuf.Empty|undefined} value */
proto.engineinterface.DclMessage.prototype.setReset = function(value) {
  jspb.Message.setOneofWrapperField(this, 8, proto.engineinterface.DclMessage.oneofGroups_[0], value);
};


proto.engineinterface.DclMessage.prototype.clearReset = function() {
  this.setReset(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.engineinterface.DclMessage.prototype.hasReset = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional CreateUIScene createUIScene = 9;
 * @return {?proto.engineinterface.CreateUIScene}
 */
proto.engineinterface.DclMessage.prototype.getCreateuiscene = function() {
  return /** @type{?proto.engineinterface.CreateUIScene} */ (
    jspb.Message.getWrapperField(this, proto.engineinterface.CreateUIScene, 9));
};


/** @param {?proto.engineinterface.CreateUIScene|undefined} value */
proto.engineinterface.DclMessage.prototype.setCreateuiscene = function(value) {
  jspb.Message.setOneofWrapperField(this, 9, proto.engineinterface.DclMessage.oneofGroups_[0], value);
};


proto.engineinterface.DclMessage.prototype.clearCreateuiscene = function() {
  this.setCreateuiscene(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.engineinterface.DclMessage.prototype.hasCreateuiscene = function() {
  return jspb.Message.getField(this, 9) != null;
};


goog.object.extend(exports, proto.engineinterface);
